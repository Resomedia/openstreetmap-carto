{
  "bounds": [
    -180,
    -85.05112877980659,
    180,
    85.05112877980659
  ],
  "center": [
    0,
    0,
    4
  ],
  "format": "png",
  "interactivity": false,
  "minzoom": 0,
  "maxzoom": 22,
  "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
  "Stylesheet": [
    "style.mss",
    "fonts.mss",
    "shapefiles.mss",
    "landcover.mss",
    "water.mss",
    "water-features.mss",
    "road-colors-generated.mss",
    "roads.mss",
    "power.mss",
    "placenames.mss",
    "buildings.mss",
    "stations.mss",
    "amenity-points.mss",
    "ferry-routes.mss",
    "aerialways.mss",
    "admin.mss",
    "addressing.mss"
  ],
  "Layer": [
    {
      "id": "landcover-low-zoom",
      "geometry": "polygon",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way, way_pixels,\n    COALESCE(wetland, landuse, \"natural\") AS feature\n  FROM (SELECT\n      way,\n      ('landuse_' || (CASE WHEN landuse IN ('forest', 'farmland', 'residential', 'commercial', 'retail', 'industrial',\n                                            'meadow', 'grass', 'village_green', 'vineyard', 'orchard') THEN landuse ELSE NULL END)) AS landuse,\n      ('natural_' || (CASE WHEN \"natural\" IN ('wood', 'sand', 'scree', 'shingle', 'bare_rock', 'heath', 'grassland', 'scrub') THEN \"natural\" ELSE NULL END)) AS \"natural\",\n      ('wetland_' || (CASE WHEN \"natural\" IN ('wetland', 'mud') THEN (CASE WHEN \"natural\" IN ('mud') THEN \"natural\" ELSE tags->'wetland' END) ELSE NULL END)) AS wetland,\n      way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels,\n      way_area\n    FROM planet_osm_polygon\n    WHERE (landuse IN ('forest', 'farmland', 'residential', 'commercial', 'retail', 'industrial', 'meadow', 'grass', 'village_green', 'vineyard', 'orchard')\n      OR \"natural\" IN ('wood', 'wetland', 'mud', 'sand', 'scree', 'shingle', 'bare_rock', 'heath', 'grassland', 'scrub'))\n      AND way_area > 0.01*!pixel_width!::real*!pixel_height!::real\n      AND building IS NULL\n  ) AS features\n  ORDER BY way_area DESC, feature\n) AS landcover_low_zoom"
      },
      "properties": {
        "minzoom": 5,
        "maxzoom": 9
      },
      "layerId": "landcover-low-zoom"
    },
    {
      "id": "landcover",
      "geometry": "polygon",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way, name, religion, way_pixels, is_building,\n    COALESCE(aeroway, amenity, wetland, power, landuse, leisure, man_made, \"natural\", tourism, highway, railway) AS feature\n  FROM (SELECT\n      way, COALESCE(name, '') AS name,\n      ('aeroway_' || (CASE WHEN aeroway IN ('apron', 'aerodrome') THEN aeroway ELSE NULL END)) AS aeroway,\n      ('amenity_' || (CASE WHEN amenity IN ('bicycle_parking', 'motorcycle_parking', 'university', 'college', 'school', 'taxi',\n                                            'hospital', 'kindergarten', 'grave_yard', 'prison', 'place_of_worship', 'clinic', 'ferry_terminal',\n                                            'marketplace', 'community_centre', 'social_facility', 'arts_centre', 'parking_space', 'bus_station',\n                                            'fire_station', 'police')\n                      OR amenity IN ('parking') AND (tags->'parking' NOT IN ('underground') OR (tags->'parking') IS NULL) THEN amenity ELSE NULL END)) AS amenity,\n      ('landuse_' || (CASE WHEN landuse IN ('quarry', 'vineyard', 'orchard', 'cemetery', 'residential', 'garages', 'meadow', 'grass',\n                                            'allotments', 'forest', 'farmyard', 'farmland', 'greenhouse_horticulture',\n                                            'recreation_ground', 'village_green', 'retail', 'industrial', 'railway', 'commercial',\n                                            'brownfield', 'landfill', 'construction', 'plant_nursery', 'religious') THEN landuse ELSE NULL END)) AS landuse,\n      ('leisure_' || (CASE WHEN leisure IN ('swimming_pool', 'playground', 'park', 'recreation_ground', 'garden',\n                                            'golf_course', 'miniature_golf', 'sports_centre', 'stadium', 'pitch', 'ice_rink',\n                                            'track', 'dog_park', 'fitness_station') THEN leisure ELSE NULL END)) AS leisure,\n      ('man_made_' || (CASE WHEN man_made IN ('works', 'wastewater_plant', 'water_works') THEN man_made ELSE NULL END)) AS man_made,\n      ('natural_' || (CASE WHEN \"natural\" IN ('beach', 'shoal', 'heath', 'grassland', 'wood', 'sand', 'scree', 'shingle', 'bare_rock', 'scrub') THEN \"natural\" ELSE NULL END)) AS \"natural\",\n      ('wetland_' || (CASE WHEN \"natural\" IN ('wetland', 'marsh', 'mud') THEN (CASE WHEN \"natural\" IN ('marsh', 'mud') THEN \"natural\" ELSE tags->'wetland' END) ELSE NULL END)) AS wetland,\n      ('power_' || (CASE WHEN power IN ('station', 'sub_station', 'substation', 'generator') THEN power ELSE NULL END)) AS power,\n      ('tourism_' || (CASE WHEN tourism IN ('camp_site', 'caravan_site', 'picnic_site') THEN tourism ELSE NULL END)) AS tourism,\n      ('highway_' || (CASE WHEN highway IN ('services', 'rest_area') THEN highway ELSE NULL END)) AS highway,\n      ('railway_' || (CASE WHEN railway = 'station' THEN railway ELSE NULL END)) AS railway,\n      CASE WHEN religion IN ('christian', 'jewish', 'muslim') THEN religion ELSE 'INT-generic'::text END AS religion,\n      way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels,\n      CASE WHEN building = 'no' OR building IS NULL THEN 'no' ELSE 'yes' END AS is_building,\n      way_area\n    FROM planet_osm_polygon\n    WHERE (landuse IS NOT NULL\n      OR leisure IS NOT NULL\n      OR aeroway IN ('apron', 'aerodrome')\n      OR amenity IN ('parking', 'bicycle_parking', 'motorcycle_parking', 'taxi', 'university', 'college', 'school', 'hospital', 'kindergarten',\n                     'grave_yard', 'place_of_worship', 'prison', 'clinic', 'ferry_terminal', 'marketplace', 'community_centre', 'social_facility',\n                     'arts_centre', 'parking_space', 'bus_station', 'fire_station', 'police')\n      OR man_made IN ('works', 'wastewater_plant','water_works')\n      OR \"natural\" IN ('beach', 'shoal', 'heath', 'mud', 'marsh', 'wetland', 'grassland', 'wood', 'sand', 'scree', 'shingle', 'bare_rock', 'scrub')\n      OR power IN ('station', 'sub_station', 'substation', 'generator')\n      OR tourism IN ('camp_site', 'caravan_site', 'picnic_site')\n      OR highway IN ('services', 'rest_area')\n      OR railway = 'station')\n      AND way_area > 1*!pixel_width!::real*!pixel_height!::real\n  ) AS landcover\n  ORDER BY way_area DESC, feature\n) AS features"
      },
      "properties": {
        "minzoom": 10
      },
      "layerId": "landcover"
    },
    {
      "id": "landcover-line",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way\n  FROM planet_osm_line\n  WHERE man_made = 'cutline'\n) AS landcover_line"
      },
      "properties": {
        "minzoom": 14
      },
      "layerId": "landcover-line"
    },
    {
      "id": "icesheet-poly",
      "geometry": "polygon",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "file": "data/antarctica-icesheet-polygons-3857/icesheet_polygons.shp",
        "type": "shape"
      },
      "properties": {
        "minzoom": 5
      },
      "layerId": "icesheet-poly"
    },
    {
      "id": "water-lines-casing",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    waterway,\n    CASE WHEN tags->'intermittent' IN ('yes')\n      OR tags->'seasonal' IN ('yes', 'spring', 'summer', 'autumn', 'winter', 'wet_season', 'dry_season')\n      THEN 'yes' ELSE 'no' END AS int_intermittent,\n    CASE WHEN tunnel IN ('yes', 'culvert') THEN 'yes' ELSE 'no' END AS int_tunnel\n  FROM planet_osm_line\n  WHERE waterway IN ('stream', 'drain', 'ditch')\n) AS water_lines_casing"
      },
      "properties": {
        "minzoom": 13
      },
      "layerId": "water-lines-casing"
    },
    {
      "id": "water-lines-low-zoom",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    waterway,\n    CASE WHEN tags->'intermittent' IN ('yes')\n      OR tags->'seasonal' IN ('yes', 'spring', 'summer', 'autumn', 'winter', 'wet_season', 'dry_season')\n      THEN 'yes' ELSE 'no' END AS int_intermittent\n  FROM planet_osm_line\n  WHERE waterway = 'river'\n) AS water_lines_low_zoom"
      },
      "properties": {
        "minzoom": 8,
        "maxzoom": 11
      },
      "layerId": "water-lines-low-zoom"
    },
    {
      "id": "water-lines",
      "class": "water-lines",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    waterway,\n    name,\n    CASE WHEN tags->'intermittent' IN ('yes')\n      OR tags->'seasonal' IN ('yes', 'spring', 'summer', 'autumn', 'winter', 'wet_season', 'dry_season')\n      THEN 'yes' ELSE 'no' END AS int_intermittent,\n    CASE WHEN tunnel IN ('yes', 'culvert') THEN 'yes' ELSE 'no' END AS int_tunnel,\n    'no' AS bridge\n  FROM planet_osm_line\n  WHERE waterway IN ('river', 'canal', 'stream', 'drain', 'ditch', 'wadi')\n    AND (bridge IS NULL OR bridge NOT IN ('yes', 'aqueduct'))\n  ORDER BY COALESCE(layer,0)\n) AS water_lines"
      },
      "properties": {
        "minzoom": 12
      },
      "layerId": "water-lines"
    },
    {
      "id": "water-areas",
      "geometry": "polygon",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    \"natural\",\n    waterway,\n    landuse,\n    name,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels,\n    CASE WHEN tags->'intermittent' IN ('yes')\n      OR tags->'seasonal' IN ('yes', 'spring', 'summer', 'autumn', 'winter', 'wet_season', 'dry_season')\n      OR tags->'basin' IN ('detention', 'infiltration')\n      THEN 'yes' ELSE 'no' END AS int_intermittent\n  FROM planet_osm_polygon\n  WHERE\n    (waterway IN ('dock', 'riverbank')\n      OR landuse IN ('reservoir', 'basin')\n      OR \"natural\" IN ('water', 'glacier'))\n    AND building IS NULL\n    AND way_area > 1*!pixel_width!::real*!pixel_height!::real\n  ORDER BY COALESCE(layer,0), way_area DESC\n) AS water_areas"
      },
      "properties": {
        "minzoom": 0
      },
      "layerId": "water-areas"
    },
    {
      "id": "ocean-lz",
      "geometry": "polygon",
      "class": "ocean",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "file": "data/simplified-water-polygons-split-3857/simplified_water_polygons.shp",
        "type": "shape"
      },
      "properties": {
        "maxzoom": 9
      },
      "layerId": "ocean-lz"
    },
    {
      "id": "ocean",
      "geometry": "polygon",
      "class": "ocean",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "file": "data/water-polygons-split-3857/water_polygons.shp",
        "type": "shape"
      },
      "properties": {
        "minzoom": 10
      },
      "layerId": "ocean"
    },
    {
      "id": "landcover-area-symbols",
      "geometry": "polygon",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way, surface,\n    COALESCE(CASE WHEN landuse = 'forest' THEN 'wood' ELSE NULL END, \"natural\") AS \"natural\",\n    CASE WHEN \"natural\" IN ('marsh', 'mud')\n        THEN \"natural\"\n        ELSE CASE WHEN (\"natural\" = 'wetland' AND NOT tags ? 'wetland')\n          THEN 'wetland'\n          ELSE CASE WHEN (\"natural\" = 'wetland')\n            THEN tags->'wetland'\n            ELSE NULL\n            END\n        END\n      END AS int_wetland,\n    tags->'leaf_type' AS leaf_type,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels\n  FROM planet_osm_polygon\n  WHERE (\"natural\" IN ('marsh', 'mud', 'wetland', 'wood', 'beach', 'shoal', 'reef', 'scrub', 'sand') OR landuse = 'forest')\n    AND building IS NULL\n    AND way_area > 1*!pixel_width!::real*!pixel_height!::real\n  ORDER BY COALESCE(layer,0), way_area DESC\n) AS landcover_area_symbols"
      },
      "properties": {
        "minzoom": 5
      },
      "layerId": "landcover-area-symbols"
    },
    {
      "id": "icesheet-outlines",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "file": "data/antarctica-icesheet-outlines-3857/icesheet_outlines.shp",
        "type": "shape"
      },
      "properties": {
        "minzoom": 5
      },
      "layerId": "icesheet-outlines"
    },
    {
      "id": "marinas-area",
      "geometry": "polygon",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way\n  FROM planet_osm_polygon\n  WHERE leisure = 'marina'\n) AS marinas_area"
      },
      "properties": {
        "minzoom": 14
      },
      "layerId": "marinas-area"
    },
    {
      "id": "water-barriers-line",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    waterway,\n    name\n  FROM planet_osm_line\n  WHERE waterway IN ('dam', 'weir', 'lock_gate')\n) AS water_barriers_line"
      },
      "properties": {
        "minzoom": 13
      },
      "layerId": "water-barriers-line"
    },
    {
      "id": "water-barriers-poly",
      "geometry": "polygon",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    waterway,\n    name\n  FROM planet_osm_polygon\n  WHERE waterway IN ('dam', 'weir', 'lock_gate')\n) AS water_barriers_poly"
      },
      "properties": {
        "minzoom": 13
      },
      "layerId": "water-barriers-poly"
    },
    {
      "id": "springs",
      "geometry": "point",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    \"natural\"\n  FROM\n  (SELECT\n      ST_PointOnSurface(way) AS way,\n      \"natural\"\n    FROM planet_osm_polygon\n    WHERE way && !bbox!\n  UNION ALL\n  SELECT\n      way,\n      \"natural\"\n    FROM planet_osm_point\n    WHERE way && !bbox!\n    ) _\n  WHERE \"natural\" IN ('spring')\n) AS springs"
      },
      "properties": {
        "minzoom": 14
      },
      "layerId": "springs"
    },
    {
      "id": "piers-poly",
      "geometry": "polygon",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way, man_made\n  FROM planet_osm_polygon\n  WHERE man_made IN ('pier', 'breakwater', 'groyne')\n) AS piers_poly"
      },
      "properties": {
        "minzoom": 12
      },
      "layerId": "piers-poly"
    },
    {
      "id": "piers-line",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way, man_made\n  FROM planet_osm_line\n  WHERE man_made IN ('pier', 'breakwater', 'groyne')\n) AS piers_line"
      },
      "properties": {
        "minzoom": 12
      },
      "layerId": "piers-line"
    },
    {
      "id": "water-barriers-point",
      "geometry": "point",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way, waterway\n  FROM planet_osm_point\n  WHERE waterway IN ('dam', 'weir', 'lock_gate')\n) AS water_barriers_points"
      },
      "properties": {
        "minzoom": 17
      },
      "layerId": "water-barriers-point"
    },
    {
      "id": "bridge",
      "geometry": "polygon",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels,\n    man_made,\n    name\n  FROM planet_osm_polygon\n  WHERE man_made = 'bridge'\n) AS bridge"
      },
      "properties": {
        "minzoom": 12
      },
      "layerId": "bridge"
    },
    {
      "id": "buildings",
      "geometry": "polygon",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    building,\n    amenity,\n    aeroway,\n    aerialway,\n    tags->'public_transport' as public_transport\n  FROM planet_osm_polygon\n  WHERE building IS NOT NULL\n    AND building != 'no'\n    AND way_area > 1*!pixel_width!::real*!pixel_height!::real\n  ORDER BY COALESCE(layer,0), way_area DESC\n) AS buildings"
      },
      "properties": {
        "minzoom": 14
      },
      "layerId": "buildings"
    },
    {
      "id": "tunnels",
      "class": "access",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    (CASE WHEN feature IN ('highway_motorway_link', 'highway_trunk_link', 'highway_primary_link', 'highway_secondary_link', 'highway_tertiary_link') THEN substr(feature, 0, length(feature)-4) ELSE feature END) AS feature,\n    horse,\n    foot,\n    bicycle,\n    tracktype,\n    int_surface,\n    access,\n    construction,\n    service,\n    link,\n    layernotnull\n  FROM ( -- subselect that contains both roads and rail\n    SELECT\n        way,\n        'highway_' || highway AS feature, --only motorway to tertiary links are accepted later on\n        horse,\n        foot,\n        bicycle,\n        tracktype,\n        CASE WHEN surface IN ('unpaved', 'compacted', 'dirt', 'earth', 'fine_gravel', 'grass', 'grass_paver', 'gravel', 'ground',\n                              'mud', 'pebblestone', 'salt', 'sand', 'woodchips', 'clay', 'ice', 'snow') THEN 'unpaved'\n          WHEN surface IN ('paved', 'asphalt', 'cobblestone', 'cobblestone:flattened', 'sett', 'concrete', 'concrete:lanes',\n                              'concrete:plates', 'paving_stones', 'metal', 'wood', 'unhewn_cobblestone') THEN 'paved'\n          ELSE NULL\n        END AS int_surface,\n        CASE WHEN access IN ('destination') THEN 'destination'::text\n          WHEN access IN ('no', 'private') THEN 'no'::text\n          ELSE NULL\n        END AS access,\n        construction,\n        CASE\n          WHEN service IN ('parking_aisle', 'drive-through', 'driveway') THEN 'INT-minor'::text\n          ELSE 'INT-normal'::text\n        END AS service,\n        CASE\n          WHEN highway IN ('motorway_link', 'trunk_link', 'primary_link', 'secondary_link', 'tertiary_link') THEN 'yes'\n          ELSE 'no'\n        END AS link,\n        COALESCE(layer,0) AS layernotnull,\n        z_order\n      FROM planet_osm_line\n      WHERE (tunnel = 'yes' OR tunnel = 'building_passage' OR covered = 'yes')\n        AND highway IS NOT NULL -- end of road select\n    UNION ALL\n    SELECT\n        way,\n        'railway_' || (CASE WHEN railway = 'preserved' AND service IN ('spur', 'siding', 'yard') THEN 'INT-preserved-ssy'::text\n                         WHEN (railway = 'rail' AND service IN ('spur', 'siding', 'yard')) THEN 'INT-spur-siding-yard'\n                         WHEN (railway = 'tram' AND service IN ('spur', 'siding', 'yard')) THEN 'tram-service'\n                         ELSE railway END) AS feature,\n        horse,\n        foot,\n        bicycle,\n        tracktype,\n        'null',\n        CASE\n          WHEN access IN ('destination') THEN 'destination'::text\n          WHEN access IN ('no', 'private') THEN 'no'::text\n          ELSE NULL\n        END AS access,\n        construction,\n        CASE WHEN service IN ('parking_aisle', 'drive-through', 'driveway') THEN 'INT-minor'::text ELSE 'INT-normal'::text END AS service,\n        'no' AS link,\n        COALESCE(layer,0) AS layernotnull,\n        z_order\n      FROM planet_osm_line\n      WHERE (tunnel = 'yes' OR tunnel = 'building_passage' OR covered = 'yes')\n        AND (railway NOT IN ('platform') AND railway IS NOT NULL) -- end of rail select\n    ) AS features\n  ORDER BY\n    layernotnull,\n    z_order,\n    CASE WHEN substring(feature for 8) = 'railway_' THEN 2 ELSE 1 END,\n    CASE WHEN feature IN ('railway_INT-preserved-ssy', 'railway_INT-spur-siding-yard', 'railway_tram-service') THEN 0 ELSE 1 END,\n    CASE WHEN access IN ('no', 'private') THEN 0 WHEN access IN ('destination') THEN 1 ELSE 2 END,\n    CASE WHEN int_surface IN ('unpaved') THEN 0 ELSE 2 END\n) AS tunnels"
      },
      "properties": {
        "group-by": "layernotnull",
        "minzoom": 10
      },
      "layerId": "tunnels"
    },
    {
      "id": "landuse-overlay",
      "geometry": "polygon",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    landuse,\n    military,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels\n  FROM planet_osm_polygon\n  WHERE (landuse = 'military'\n    OR military = 'danger_area')\n    AND building IS NULL\n) AS landuse_overlay"
      },
      "properties": {
        "minzoom": 8
      },
      "layerId": "landuse-overlay"
    },
    {
      "id": "tourism-boundary",
      "geometry": "polygon",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels,\n    name,\n    tourism\n  FROM planet_osm_polygon\n  WHERE tourism = 'theme_park'\n    OR tourism = 'zoo'\n) AS tourism_boundary"
      },
      "properties": {
        "minzoom": 10
      },
      "layerId": "tourism-boundary"
    },
    {
      "id": "line-barriers",
      "class": "barriers",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way, COALESCE(historic, barrier) AS feature\n  FROM (SELECT way,\n    ('barrier_' || (CASE WHEN barrier IN ('chain', 'city_wall', 'embankment', 'ditch', 'fence', 'guard_rail',\n          'handrail', 'hedge', 'kerb', 'retaining_wall', 'wall') THEN barrier ELSE NULL END)) AS barrier,\n    ('historic_' || (CASE WHEN historic = 'citywalls' THEN historic ELSE NULL END)) AS historic\n    FROM planet_osm_line\n    WHERE barrier IN ('chain', 'city_wall', 'embankment', 'ditch', 'fence', 'guard_rail',\n          'handrail', 'hedge', 'kerb', 'retaining_wall', 'wall')\n      OR historic = 'citywalls'\n      AND (waterway IS NULL OR waterway NOT IN ('river', 'canal', 'stream', 'drain', 'ditch', 'wadi'))\n  ) AS features\n) AS line_barriers"
      },
      "properties": {
        "minzoom": 14
      },
      "layerId": "line-barriers"
    },
    {
      "id": "cliffs",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way, \"natural\", man_made\n  FROM planet_osm_line\n  WHERE \"natural\" = 'cliff' OR man_made = 'embankment'\n) AS cliffs"
      },
      "properties": {
        "minzoom": 13
      },
      "layerId": "cliffs"
    },
    {
      "id": "area-barriers",
      "class": "barriers",
      "geometry": "polygon",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way, COALESCE(historic, barrier) AS feature\n  FROM (SELECT way,\n    ('barrier_' || (CASE WHEN barrier IN ('chain', 'city_wall', 'embankment', 'ditch', 'fence', 'guard_rail',\n          'handrail', 'hedge', 'kerb', 'retaining_wall', 'wall') THEN barrier ELSE NULL END)) AS barrier,\n    ('historic_' || (CASE WHEN historic = 'citywalls' THEN historic ELSE NULL END)) AS historic\n    FROM planet_osm_polygon\n    WHERE (barrier IN ('chain', 'city_wall', 'embankment', 'ditch', 'fence', 'guard_rail',\n          'handrail', 'hedge', 'kerb', 'retaining_wall', 'wall')\n      OR historic = 'citywalls')\n      AND building IS NULL\n  ) AS features\n) AS area_barriers"
      },
      "properties": {
        "minzoom": 16
      },
      "layerId": "area-barriers"
    },
    {
      "id": "ferry-routes",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way\n  FROM planet_osm_line\n  WHERE route = 'ferry'\n    AND osm_id > 0\n) AS ferry_routes"
      },
      "properties": {
        "minzoom": 8
      },
      "layerId": "ferry-routes"
    },
    {
      "id": "turning-circle-casing",
      "geometry": "point",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT DISTINCT ON (p.way)\n    p.way AS way, l.highway AS int_tc_type,\n    CASE WHEN l.service IN ('parking_aisle', 'drive-through', 'driveway')\n      THEN 'INT-minor'::text\n      ELSE 'INT-normal'::text\n    END AS int_tc_service\n  FROM planet_osm_point p\n    JOIN planet_osm_line l\n      ON ST_DWithin(p.way, l.way, 0.1) -- Assumes Mercator\n    JOIN (VALUES\n      ('tertiary', 1),\n      ('unclassified', 2),\n      ('residential', 3),\n      ('living_street', 4),\n      ('service', 5),\n      ('track', 6)\n      ) AS v (highway, prio)\n      ON v.highway=l.highway\n  WHERE p.highway = 'turning_circle'\n    OR p.highway = 'turning_loop'\n  ORDER BY p.way, v.prio\n) AS turning_circle_sql"
      },
      "properties": {
        "minzoom": 15
      },
      "layerId": "turning-circle-casing"
    },
    {
      "id": "highway-area-casing",
      "geometry": "polygon",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    COALESCE((\n      'highway_' || (CASE WHEN highway IN ('residential', 'unclassified', 'pedestrian', 'service', 'footway', 'cycleway', 'track', 'path', 'platform') THEN highway ELSE NULL END)),\n      ('railway_' || (CASE WHEN (railway IN ('platform')\n                      AND (tags->'location' NOT IN ('underground') OR (tags->'location') IS NULL)\n                      AND (tunnel NOT IN ('yes', 'building_passage') OR tunnel IS NULL)\n                      AND (covered NOT IN ('yes') OR covered IS NULL))\n                      THEN railway ELSE NULL END))\n    ) AS feature\n  FROM planet_osm_polygon\n  WHERE highway IN ('residential', 'unclassified', 'pedestrian', 'service', 'footway', 'track', 'path', 'platform')\n    OR (railway IN ('platform')\n        AND (tags->'location' NOT IN ('underground') OR (tags->'location') IS NULL)\n        AND (tunnel NOT IN ('yes', 'building_passage') OR tunnel IS NULL)\n        AND (covered NOT IN ('yes') OR covered IS NULL))\n  ORDER BY COALESCE(layer,0), way_area DESC\n) AS highway_area_casing"
      },
      "properties": {
        "minzoom": 14
      },
      "layerId": "highway-area-casing"
    },
    {
      "id": "roads-casing",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    (CASE WHEN feature IN ('highway_motorway_link', 'highway_trunk_link', 'highway_primary_link', 'highway_secondary_link', 'highway_tertiary_link') THEN substr(feature, 0, length(feature)-4) ELSE feature END) AS feature,\n    horse,\n    foot,\n    bicycle,\n    tracktype,\n    int_surface,\n    access,\n    construction,\n    service,\n    link,\n    layernotnull\n  FROM ( -- subselect that contains both roads and rail/aero\n    SELECT\n        way,\n        ('highway_' || highway) AS feature, --only motorway to tertiary links are accepted later on\n        horse,\n        foot,\n        bicycle,\n        tracktype,\n        CASE WHEN surface IN ('unpaved', 'compacted', 'dirt', 'earth', 'fine_gravel', 'grass', 'grass_paver', 'gravel', 'ground',\n                              'mud', 'pebblestone', 'salt', 'sand', 'woodchips', 'clay', 'ice', 'snow') THEN 'unpaved'\n          WHEN surface IN ('paved', 'asphalt', 'cobblestone', 'cobblestone:flattened', 'sett', 'concrete', 'concrete:lanes',\n                              'concrete:plates', 'paving_stones', 'metal', 'wood', 'unhewn_cobblestone') THEN 'paved'\n          ELSE NULL\n        END AS int_surface,\n        CASE WHEN access IN ('destination') THEN 'destination'::text\n          WHEN access IN ('no', 'private') THEN 'no'::text\n          ELSE NULL\n        END AS access,\n        construction,\n        CASE\n          WHEN service IN ('parking_aisle', 'drive-through', 'driveway') OR leisure IN ('slipway') THEN 'INT-minor'::text\n          ELSE 'INT-normal'::text\n        END AS service,\n        CASE\n          WHEN highway IN ('motorway_link', 'trunk_link', 'primary_link', 'secondary_link', 'tertiary_link') THEN 'yes'\n          ELSE 'no'\n        END AS link,\n        COALESCE(layer,0) AS layernotnull,\n        osm_id,\n        z_order\n      FROM planet_osm_line\n      WHERE (tunnel IS NULL OR NOT tunnel IN ('yes', 'building_passage'))\n        AND (covered IS NULL OR NOT covered = 'yes')\n        AND (bridge IS NULL OR NOT bridge IN ('yes', 'boardwalk', 'cantilever', 'covered', 'low_water_crossing', 'movable', 'trestle', 'viaduct'))\n        AND highway IS NOT NULL -- end of road select\n    UNION ALL\n    SELECT\n        way,\n        ('railway_' || (CASE WHEN railway = 'preserved' AND service IN ('spur', 'siding', 'yard') THEN 'INT-preserved-ssy'::text\n                             WHEN (railway = 'rail' AND service IN ('spur', 'siding', 'yard')) THEN 'INT-spur-siding-yard'\n                             WHEN (railway = 'tram' AND service IN ('spur', 'siding', 'yard')) THEN 'tram-service'\n                             ELSE railway END)) AS feature,\n        horse,\n        foot,\n        bicycle,\n        tracktype,\n        'null',\n        CASE\n          WHEN access IN ('destination') THEN 'destination'::text\n          WHEN access IN ('no', 'private') THEN 'no'::text\n          ELSE NULL\n        END AS access,\n        construction,\n        CASE WHEN service IN ('parking_aisle', 'drive-through', 'driveway') OR leisure IN ('slipway') THEN 'INT-minor'::text ELSE 'INT-normal'::text END AS service,\n        'no' AS link,\n        COALESCE(layer,0) AS layernotnull,\n        osm_id,\n        z_order\n      FROM planet_osm_line\n      WHERE (tunnel IS NULL OR NOT tunnel IN ('yes', 'building_passage'))\n        AND (covered IS NULL OR NOT covered = 'yes')\n        AND (bridge IS NULL OR NOT bridge IN ('yes', 'boardwalk', 'cantilever', 'covered', 'low_water_crossing', 'movable', 'trestle', 'viaduct'))\n        AND railway IS NOT NULL -- end of rail select\n    ) AS features\n  ORDER BY\n    layernotnull,\n    z_order,\n    CASE WHEN substring(feature for 8) = 'railway_' THEN 2 ELSE 1 END,\n    CASE WHEN feature IN ('railway_INT-preserved-ssy', 'railway_INT-spur-siding-yard', 'railway_tram-service') THEN 0 ELSE 1 END,\n    CASE WHEN access IN ('no', 'private') THEN 0 WHEN access IN ('destination') THEN 1 ELSE 2 END,\n    CASE WHEN int_surface IN ('unpaved') THEN 0 ELSE 2 END,\n    osm_id\n) AS roads_sql"
      },
      "properties": {
        "minzoom": 10
      },
      "layerId": "roads-casing"
    },
    {
      "id": "highway-area-fill",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    COALESCE(\n      ('highway_' || (CASE WHEN highway IN ('residential', 'unclassified', 'pedestrian', 'service', 'footway', 'cycleway', 'living_street',\n                                            'track', 'path', 'platform', 'services') THEN highway ELSE NULL END)),\n      ('railway_' || (CASE WHEN (railway IN ('platform')\n                      AND (tags->'location' NOT IN ('underground') OR (tags->'location') IS NULL)\n                      AND (tunnel NOT IN ('yes', 'building_passage') OR tunnel IS NULL)\n                      AND (covered NOT IN ('yes') OR covered IS NULL))\n                      THEN railway ELSE NULL END)),\n      (('aeroway_' || CASE WHEN aeroway IN ('runway', 'taxiway', 'helipad') THEN aeroway ELSE NULL END))\n    ) AS feature\n  FROM planet_osm_polygon\n  WHERE highway IN ('residential', 'unclassified', 'pedestrian', 'service', 'footway', 'living_street', 'track', 'path', 'platform', 'services')\n    OR (railway IN ('platform')\n        AND (tags->'location' NOT IN ('underground') OR (tags->'location') IS NULL)\n        AND (tunnel NOT IN ('yes', 'building_passage') OR tunnel IS NULL)\n        AND (covered NOT IN ('yes') OR covered IS NULL))\n    OR aeroway IN ('runway', 'taxiway', 'helipad')\n  ORDER BY COALESCE(layer,0), way_area desc\n) AS highway_area_fill"
      },
      "properties": {
        "minzoom": 14
      },
      "layerId": "highway-area-fill"
    },
    {
      "id": "roads-fill",
      "class": "access",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    (CASE WHEN feature IN ('highway_motorway_link', 'highway_trunk_link', 'highway_primary_link', 'highway_secondary_link', 'highway_tertiary_link') THEN substr(feature, 0, length(feature)-4) ELSE feature END) AS feature,\n    horse,\n    foot,\n    bicycle,\n    tracktype,\n    int_surface,\n    access,\n    construction,\n    service,\n    link,\n    layernotnull\n  FROM ( -- subselect that contains both roads and rail/aero\n    SELECT\n        way,\n        ('highway_' || highway) AS feature, --only motorway to tertiary links are accepted later on\n        horse,\n        foot,\n        bicycle,\n        tracktype,\n        CASE WHEN surface IN ('unpaved', 'compacted', 'dirt', 'earth', 'fine_gravel', 'grass', 'grass_paver', 'gravel', 'ground',\n                              'mud', 'pebblestone', 'salt', 'sand', 'woodchips', 'clay', 'ice', 'snow') THEN 'unpaved'\n          WHEN surface IN ('paved', 'asphalt', 'cobblestone', 'cobblestone:flattened', 'sett', 'concrete', 'concrete:lanes',\n                              'concrete:plates', 'paving_stones', 'metal', 'wood', 'unhewn_cobblestone') THEN 'paved'\n          ELSE NULL\n        END AS int_surface,\n        CASE WHEN access IN ('destination') THEN 'destination'::text\n          WHEN access IN ('no', 'private') THEN 'no'::text\n          ELSE NULL\n        END AS access,\n        construction,\n        CASE\n          WHEN service IN ('parking_aisle', 'drive-through', 'driveway') OR leisure IN ('slipway') THEN 'INT-minor'::text\n          ELSE 'INT-normal'::text\n        END AS service,\n        CASE\n          WHEN highway IN ('motorway_link', 'trunk_link', 'primary_link', 'secondary_link', 'tertiary_link') THEN 'yes'\n          ELSE 'no'\n        END AS link,\n        COALESCE(layer,0) AS layernotnull,\n        osm_id,\n        z_order\n      FROM planet_osm_line\n      WHERE (tunnel IS NULL OR NOT tunnel IN ('yes', 'building_passage'))\n        AND (covered IS NULL OR NOT covered = 'yes')\n        AND (bridge IS NULL OR NOT bridge IN ('yes', 'boardwalk', 'cantilever', 'covered', 'low_water_crossing', 'movable', 'trestle', 'viaduct'))\n        AND highway IS NOT NULL -- end of road select\n    UNION ALL\n    SELECT\n        way,\n        ('railway_' || (CASE WHEN railway = 'preserved' AND service IN ('spur', 'siding', 'yard') THEN 'INT-preserved-ssy'::text\n                             WHEN (railway = 'rail' AND service IN ('spur', 'siding', 'yard')) THEN 'INT-spur-siding-yard'\n                             WHEN (railway = 'tram' AND service IN ('spur', 'siding', 'yard')) THEN 'tram-service'\n                             ELSE railway END)) AS feature,\n        horse,\n        foot,\n        bicycle,\n        tracktype,\n        'null',\n        CASE\n          WHEN access IN ('destination') THEN 'destination'::text\n          WHEN access IN ('no', 'private') THEN 'no'::text\n          ELSE NULL\n        END AS access,\n        construction,\n        CASE WHEN service IN ('parking_aisle', 'drive-through', 'driveway') OR leisure IN ('slipway') THEN 'INT-minor'::text ELSE 'INT-normal'::text END AS service,\n        'no' AS link,\n        COALESCE(layer,0) AS layernotnull,\n        osm_id,\n        z_order\n      FROM planet_osm_line\n      WHERE (tunnel IS NULL OR NOT tunnel IN ('yes', 'building_passage'))\n        AND (covered IS NULL OR NOT covered = 'yes')\n        AND (bridge IS NULL OR NOT bridge IN ('yes', 'boardwalk', 'cantilever', 'covered', 'low_water_crossing', 'movable', 'trestle', 'viaduct'))\n        AND railway IS NOT NULL -- end of rail select\n    ) AS features\n  ORDER BY\n    layernotnull,\n    z_order,\n    CASE WHEN substring(feature for 8) = 'railway_' THEN 2 ELSE 1 END,\n    CASE WHEN feature IN ('railway_INT-preserved-ssy', 'railway_INT-spur-siding-yard', 'railway_tram-service') THEN 0 ELSE 1 END,\n    CASE WHEN access IN ('no', 'private') THEN 0 WHEN access IN ('destination') THEN 1 ELSE 2 END,\n    CASE WHEN int_surface IN ('unpaved') THEN 0 ELSE 2 END,\n    osm_id\n) AS roads_sql"
      },
      "properties": {
        "minzoom": 10
      },
      "layerId": "roads-fill"
    },
    {
      "id": "turning-circle-fill",
      "geometry": "point",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT DISTINCT ON (p.way)\n    p.way AS way, l.highway AS int_tc_type,\n    CASE WHEN l.service IN ('parking_aisle', 'drive-through', 'driveway')\n      THEN 'INT-minor'::text\n      ELSE 'INT-normal'::text\n    END AS int_tc_service\n  FROM planet_osm_point p\n    JOIN planet_osm_line l\n      ON ST_DWithin(p.way, l.way, 0.1) -- Assumes Mercator\n    JOIN (VALUES\n      ('tertiary', 1),\n      ('unclassified', 2),\n      ('residential', 3),\n      ('living_street', 4),\n      ('service', 5),\n      ('track', 6)\n      ) AS v (highway, prio)\n      ON v.highway=l.highway\n  WHERE p.highway = 'turning_circle'\n    OR p.highway = 'turning_loop'\n  ORDER BY p.way, v.prio\n) AS turning_circle_sql"
      },
      "properties": {
        "minzoom": 15
      },
      "layerId": "turning-circle-fill"
    },
    {
      "id": "aerialways",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    aerialway,\n    name\n  FROM planet_osm_line\n  WHERE aerialway IS NOT NULL\n) AS aerialways"
      },
      "properties": {
        "minzoom": 12
      },
      "layerId": "aerialways"
    },
    {
      "id": "roads-low-zoom",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    COALESCE(\n      ('highway_' || (CASE WHEN highway IN ('motorway_link', 'trunk_link', 'primary_link', 'secondary_link', 'tertiary_link')\n                             THEN substr(highway, 0, length(highway)-4) ELSE highway end)),\n      ('railway_' || (CASE WHEN (railway = 'rail' AND service IN ('spur', 'siding', 'yard')) THEN 'INT-spur-siding-yard'\n                           WHEN railway IN ('rail', 'tram', 'light_rail', 'funicular', 'narrow_gauge') THEN railway ELSE NULL END))\n    ) AS feature,\n    CASE WHEN tunnel = 'yes' OR tunnel = 'building_passage' OR covered = 'yes' THEN 'yes' ELSE 'no' END AS int_tunnel,\n    CASE WHEN highway IN ('motorway_link', 'trunk_link', 'primary_link', 'secondary_link', 'tertiary_link') THEN 'yes' ELSE 'no' END AS link,\n    CASE WHEN surface IN ('unpaved', 'compacted', 'dirt', 'earth', 'fine_gravel', 'grass', 'grass_paver', 'gravel', 'ground',\n                          'mud', 'pebblestone', 'salt', 'sand', 'woodchips', 'clay', 'ice', 'snow') THEN 'unpaved'\n      WHEN surface IN ('paved', 'asphalt', 'cobblestone', 'cobblestone:flattened', 'sett', 'concrete', 'concrete:lanes',\n                          'concrete:plates', 'paving_stones', 'metal', 'wood', 'unhewn_cobblestone') THEN 'paved'\n      ELSE NULL\n    END AS int_surface\n  FROM planet_osm_roads\n  WHERE highway IS NOT NULL\n    OR (railway IS NOT NULL AND railway != 'preserved'\n      AND (service IS NULL OR service NOT IN ('spur', 'siding', 'yard')))\n  ORDER BY\n    z_order\n) AS roads_low_zoom"
      },
      "properties": {
        "minzoom": 6,
        "maxzoom": 9
      },
      "layerId": "roads-low-zoom"
    },
    {
      "id": "waterway-bridges",
      "class": "water-lines",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    waterway,\n    name,\n    CASE WHEN tags->'intermittent' IN ('yes')\n      OR tags->'seasonal' IN ('yes', 'spring', 'summer', 'autumn', 'winter', 'wet_season', 'dry_season')\n      THEN 'yes' ELSE 'no' END AS int_intermittent,\n    CASE WHEN tunnel IN ('yes', 'culvert') THEN 'yes' ELSE 'no' END AS int_tunnel,\n    'yes' AS bridge\n  FROM planet_osm_line\n  WHERE waterway IN ('river', 'canal', 'stream', 'drain', 'ditch', 'wadi')\n    AND bridge IN ('yes', 'aqueduct')\n  ORDER BY COALESCE(layer,0)\n) AS waterway_bridges"
      },
      "properties": {
        "minzoom": 12
      },
      "layerId": "waterway-bridges"
    },
    {
      "id": "bridges",
      "class": "access",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    (CASE WHEN feature IN ('highway_motorway_link', 'highway_trunk_link', 'highway_primary_link', 'highway_secondary_link', 'highway_tertiary_link') THEN substr(feature, 0, length(feature)-4) ELSE feature END) AS feature,\n    horse,\n    foot,\n    bicycle,\n    tracktype,\n    int_surface,\n    access,\n    construction,\n    service,\n    link,\n    layernotnull\n  FROM ( -- subselect that contains both roads and rail/aero\n    SELECT\n        way,\n        'highway_' || highway AS feature, --only motorway to tertiary links are accepted later on\n        horse,\n        foot,\n        bicycle,\n        tracktype,\n        CASE WHEN surface IN ('unpaved', 'compacted', 'dirt', 'earth', 'fine_gravel', 'grass', 'grass_paver', 'gravel', 'ground',\n                              'mud', 'pebblestone', 'salt', 'sand', 'woodchips', 'clay', 'ice', 'snow') THEN 'unpaved'\n          WHEN surface IN ('paved', 'asphalt', 'cobblestone', 'cobblestone:flattened', 'sett', 'concrete', 'concrete:lanes',\n                              'concrete:plates', 'paving_stones', 'metal', 'wood', 'unhewn_cobblestone') THEN 'paved'\n          ELSE NULL\n        END AS int_surface,\n        CASE WHEN access IN ('destination') THEN 'destination'::text\n          WHEN access IN ('no', 'private') THEN 'no'::text\n          ELSE NULL\n        END AS access,\n        construction,\n        CASE\n          WHEN service IN ('parking_aisle', 'drive-through', 'driveway') THEN 'INT-minor'::text\n          ELSE 'INT-normal'::text\n        END AS service,\n        CASE\n          WHEN highway IN ('motorway_link', 'trunk_link', 'primary_link', 'secondary_link', 'tertiary_link') THEN 'yes'\n          ELSE 'no'\n        END AS link,\n        COALESCE(layer,0) AS layernotnull,\n        z_order\n      FROM planet_osm_line\n      WHERE bridge IN ('yes', 'boardwalk', 'cantilever', 'covered', 'low_water_crossing', 'movable', 'trestle', 'viaduct')\n        AND highway IS NOT NULL -- end of road select\n    UNION ALL\n    SELECT\n        way,\n        'railway_' || (CASE WHEN railway = 'preserved' AND service IN ('spur', 'siding', 'yard') THEN 'INT-preserved-ssy'::text\n                         WHEN (railway = 'rail' AND service IN ('spur', 'siding', 'yard')) THEN 'INT-spur-siding-yard'\n                         WHEN (railway = 'tram' AND service IN ('spur', 'siding', 'yard')) THEN 'tram-service'\n                         ELSE railway END) AS feature,\n        horse,\n        foot,\n        bicycle,\n        tracktype,\n        'null',\n        CASE\n          WHEN access IN ('destination') THEN 'destination'::text\n          WHEN access IN ('no', 'private') THEN 'no'::text\n          ELSE NULL\n        END AS access,\n        construction,\n        CASE WHEN service IN ('parking_aisle', 'drive-through', 'driveway') THEN 'INT-minor'::text ELSE 'INT-normal'::text END AS service,\n        'no' AS link,\n        COALESCE(layer,0) AS layernotnull,\n        z_order\n      FROM planet_osm_line\n      WHERE bridge IN ('yes', 'boardwalk', 'cantilever', 'covered', 'low_water_crossing', 'movable', 'trestle', 'viaduct')\n        AND railway IS NOT NULL -- end of rail select\n    ) AS features\n  ORDER BY\n    layernotnull,\n    z_order,\n    CASE WHEN substring(feature for 8) = 'railway_' THEN 2 ELSE 1 END,\n    CASE WHEN feature IN ('railway_INT-preserved-ssy', 'railway_INT-spur-siding-yard', 'railway_tram-service') THEN 0 ELSE 1 END,\n    CASE WHEN access IN ('no', 'private') THEN 0 WHEN access IN ('destination') THEN 1 ELSE 2 END,\n    CASE WHEN int_surface IN ('unpaved') THEN 0 ELSE 2 END\n) AS bridges"
      },
      "properties": {
        "group-by": "layernotnull",
        "minzoom": 10
      },
      "layerId": "bridges"
    },
    {
      "id": "guideways",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way\n  FROM planet_osm_line\n  WHERE highway = 'bus_guideway'\n) AS guideways"
      },
      "properties": {
        "minzoom": 11
      },
      "layerId": "guideways"
    },
    {
      "id": "entrances",
      "geometry": "point",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    tags->'entrance' AS entrance,\n    access\n  FROM planet_osm_point\n  WHERE (tags->'entrance') IS NOT NULL AND\n    (tags->'indoor' = 'no'\n    OR (tags->'indoor') IS NULL))\nAS entrances"
      },
      "properties": {
        "minzoom": 18
      },
      "layerId": "entrances"
    },
    {
      "id": "aeroways",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    aeroway,\n    bridge IN ('yes', 'boardwalk', 'cantilever', 'covered', 'low_water_crossing', 'movable', 'trestle', 'viaduct') AS bridge\n  FROM planet_osm_line\n  WHERE aeroway IN ('runway', 'taxiway')\n  ORDER BY bridge NULLS FIRST,\n    CASE WHEN aeroway = 'runway' THEN 10 ELSE 0 END\n) AS aeroways"
      },
      "properties": {
        "minzoom": 11
      },
      "layerId": "aeroways"
    },
    {
      "id": "necountries",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "WGS84",
      "srs": "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs",
      "Datasource": {
        "file": "data/ne_110m_admin_0_boundary_lines_land/ne_110m_admin_0_boundary_lines_land.shp",
        "type": "shape"
      },
      "properties": {
        "minzoom": 1,
        "maxzoom": 3
      },
      "layerId": "necountries"
    },
    {
      "id": "admin-low-zoom",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    admin_level\n  FROM planet_osm_roads\n  WHERE boundary = 'administrative'\n    AND admin_level IN ('0', '1', '2', '3', '4')\n    AND osm_id < 0\n  ORDER BY admin_level DESC\n) AS admin_low_zoom"
      },
      "properties": {
        "minzoom": 4,
        "maxzoom": 10
      },
      "layerId": "admin-low-zoom"
    },
    {
      "id": "admin-mid-zoom",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    admin_level\n  FROM planet_osm_roads\n  WHERE boundary = 'administrative'\n    AND admin_level IN ('0', '1', '2', '3', '4', '5', '6', '7', '8')\n    AND osm_id < 0\n  ORDER BY admin_level DESC\n) AS admin_mid_zoom"
      },
      "properties": {
        "minzoom": 11,
        "maxzoom": 12
      },
      "layerId": "admin-mid-zoom"
    },
    {
      "id": "admin-high-zoom",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    admin_level\n  FROM planet_osm_roads\n  WHERE boundary = 'administrative'\n    AND admin_level IN ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10')\n    AND osm_id < 0\n  ORDER BY admin_level::integer DESC -- With 10 as a valid value, we need to do a numeric ordering, not a text ordering\n) AS admin_high_zoom"
      },
      "properties": {
        "minzoom": 13
      },
      "layerId": "admin-high-zoom"
    },
    {
      "id": "power-minorline",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way\n  FROM planet_osm_line\n  WHERE power = 'minor_line'\n) AS power_minorline"
      },
      "properties": {
        "minzoom": 16
      },
      "layerId": "power-minorline"
    },
    {
      "id": "power-line",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way\n  FROM planet_osm_line\n  WHERE power = 'line'\n    OR (power = 'cable' AND tags->'location' IN ('overground', 'overhead', 'surface', 'outdoor', 'platform'))\n) AS power_line"
      },
      "properties": {
        "minzoom": 14
      },
      "layerId": "power-line"
    },
    {
      "id": "protected-areas",
      "geometry": "polygon",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    name,\n    boundary,\n    tags->'protect_class' AS protect_class,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels\n  FROM planet_osm_polygon\n  WHERE (boundary IN ('aboriginal_lands', 'national_park')\n         OR leisure = 'nature_reserve'\n         OR (boundary = 'protected_area' AND tags->'protect_class' IN ('1','1a','1b','2','3','4','5','6','7','24','97','98','99')))\n    AND building IS NULL\n    AND way_area > 1*!pixel_width!::real*!pixel_height!::real\n) AS protected_areas"
      },
      "properties": {
        "minzoom": 8
      },
      "layerId": "protected-areas"
    },
    {
      "id": "trees",
      "geometry": "polygon",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way, \"natural\"\n  FROM planet_osm_point\n  WHERE \"natural\" = 'tree'\nUNION ALL\nSELECT\n    way, \"natural\"\n  FROM planet_osm_line\n  WHERE \"natural\" = 'tree_row'\n) AS trees"
      },
      "properties": {
        "minzoom": 16
      },
      "layerId": "trees"
    },
    {
      "id": "country-names",
      "class": "country",
      "geometry": "point",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels,\n    name\n  FROM planet_osm_polygon\n  WHERE boundary = 'administrative'\n    AND admin_level = '2'\n    AND name IS NOT NULL\n    AND way_area > 100*!pixel_width!::real*!pixel_height!::real\n  ORDER BY way_area DESC\n) AS country_names"
      },
      "properties": {
        "minzoom": 2
      },
      "layerId": "country-names"
    },
    {
      "id": "capital-names",
      "geometry": "point",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    name,\n    CASE\n      WHEN (tags->'population' ~ '^[0-9]{1,8}$') THEN (tags->'population')::INTEGER ELSE 0\n    END as population,\n    round(ascii(md5(osm_id::text)) / 55) AS dir -- base direction factor on geometry to be consistent across metatiles\n  FROM planet_osm_point\n  WHERE place IN ('city', 'town', 'village', 'hamlet')\n    AND name IS NOT NULL\n    AND tags @> 'capital=>yes'\n  ORDER BY population DESC\n) AS capital_names"
      },
      "properties": {
        "minzoom": 3,
        "maxzoom": 15
      },
      "layerId": "capital-names"
    },
    {
      "id": "state-names",
      "class": "state",
      "geometry": "point",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels,\n    name,\n    ref\n  FROM planet_osm_polygon\n  WHERE boundary = 'administrative'\n    AND admin_level = '4'\n    AND name IS NOT NULL\n    AND way_area > 100*!pixel_width!::real*!pixel_height!::real\n  ORDER BY way_area DESC\n) AS state_names"
      },
      "properties": {
        "minzoom": 4
      },
      "layerId": "state-names"
    },
    {
      "id": "placenames-medium",
      "geometry": "point",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    name,\n    score,\n    CASE\n      WHEN (place = 'city') THEN 1\n      ELSE 2\n    END as category,\n    round(ascii(md5(osm_id::text)) / 55) AS dir -- base direction factor on geometry to be consistent across metatiles\n  FROM\n    (SELECT\n        osm_id,\n        way,\n        place,\n        name,\n        (\n          (CASE\n            WHEN (tags->'population' ~ '^[0-9]{1,8}$') THEN (tags->'population')::INTEGER\n            WHEN (place = 'city') THEN 100000\n            WHEN (place = 'town') THEN 1000\n            ELSE 1\n          END)\n          *\n          (CASE\n            WHEN (tags @> 'capital=>4') THEN 2\n            ELSE 1\n          END)\n        ) AS score\n      FROM planet_osm_point\n      WHERE place IN ('city', 'town')\n        AND name IS NOT NULL\n        AND NOT (tags @> 'capital=>yes')\n    ) as p\n  ORDER BY score DESC, length(name) DESC, name\n) AS placenames_medium"
      },
      "properties": {
        "minzoom": 4,
        "maxzoom": 15
      },
      "layerId": "placenames-medium"
    },
    {
      "id": "placenames-small",
      "geometry": "point",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    place,\n    leisure,\n    name\n  FROM planet_osm_point\n  WHERE place IN ('village', 'hamlet')\n     AND name IS NOT NULL\n     AND NOT tags @> 'capital=>yes'\n     OR (place IN ('suburb', 'quarter', 'neighbourhood', 'isolated_dwelling', 'farm')\n         OR (place IN ('square')\n             AND (leisure is NULL OR NOT leisure IN ('park', 'recreation_ground', 'garden')))\n     ) AND name IS NOT NULL\n  ORDER BY CASE\n      WHEN place = 'suburb' THEN 3\n      WHEN place = 'village' THEN 4\n      WHEN place = 'hamlet' THEN 5\n      WHEN place = 'quarter' THEN 6\n      WHEN place = 'neighbourhood' THEN 7\n      WHEN place = 'isolated_dwelling' THEN 8\n      WHEN place = 'farm' THEN 9\n      WHEN place = 'square' THEN 10\n    END ASC, length(name) DESC, name\n) AS placenames_small"
      },
      "properties": {
        "minzoom": 12
      },
      "layerId": "placenames-small"
    },
    {
      "id": "stations",
      "geometry": "point",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    name,\n    ref,\n    railway,\n    aerialway,\n    station\n  FROM\n  (SELECT\n      ST_PointOnSurface(way) AS way,\n      name,\n      ref,\n      railway,\n      aerialway,\n      tags->'station' AS station,\n      way_area\n    FROM planet_osm_polygon\n    WHERE way && !bbox!\n  UNION ALL\n  SELECT\n      way,\n      name,\n      ref,\n      railway,\n      aerialway,\n      tags->'station' AS station,\n      NULL as way_area\n    FROM planet_osm_point\n    WHERE way && !bbox!\n    ) _\n  WHERE railway IN ('station', 'halt', 'tram_stop')\n    OR railway = 'subway_entrance' AND way_area IS NULL\n    OR aerialway = 'station'\n  ORDER BY\n    CASE railway\n      WHEN 'station' THEN 1\n      WHEN 'subway_entrance' THEN 3\n      ELSE 2\n    END,\n    way_area DESC NULLS LAST\n) AS stations"
      },
      "properties": {
        "minzoom": 12
      },
      "layerId": "stations"
    },
    {
      "id": "amenity-points",
      "class": "points",
      "geometry": "point",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    *\n  FROM\n  (SELECT -- This subselect allows filtering on the feature column\n      way,\n      CONCAT(\n        name,\n        E'\\n' || CONCAT( -- by doing this with a || if both the ele and height branches are null, this entire expression is null and only name is used\n          CASE\n            WHEN (tags ? 'ele') AND tags->'ele' ~ '^-?\\d{1,4}(\\.\\d+)?$'\n              AND (\"natural\" IN ('peak', 'volcano', 'saddle')\n                OR tourism = 'alpine_hut' OR (tourism = 'information' AND tags->'information' = 'guidepost')\n                OR amenity = 'shelter')\n            THEN CONCAT(REPLACE(ROUND((tags->'ele')::NUMERIC)::TEXT, '-', U&'\\2212'), U&'\\00A0', 'm') ELSE NULL END,\n          CASE\n            WHEN (tags ? 'height') AND tags->'height' ~ '^\\d{1,3}(\\.\\d+)?$'\n              AND waterway = 'waterfall'\n            THEN CONCAT(ROUND((tags->'height')::NUMERIC)::TEXT, U&'\\00A0', 'm') ELSE NULL END\n          )\n        ) AS name,\n      COALESCE(\n        'aeroway_' || CASE WHEN aeroway IN ('gate', 'apron', 'helipad', 'aerodrome') THEN aeroway ELSE NULL END,\n        'tourism_' || CASE WHEN tourism IN ('alpine_hut', 'apartment', 'artwork', 'camp_site', 'caravan_site', 'chalet', 'gallery', 'guest_house',\n                                            'hostel', 'hotel', 'motel', 'museum', 'picnic_site', 'theme_park', 'wilderness_hut',\n                                            'zoo') THEN tourism ELSE NULL END,\n        'amenity_' || CASE WHEN amenity IN ('arts_centre', 'atm', 'bank', 'bar', 'bbq', 'bicycle_parking', 'bicycle_rental',\n                                            'bicycle_repair_station','biergarten', 'boat_rental', 'bureau_de_change', 'bus_station', 'cafe',\n                                            'car_rental', 'car_wash', 'casino', 'charging_station', 'childcare', 'cinema', 'clinic', 'college',\n                                            'community_centre', 'courthouse', 'dentist', 'doctors', 'drinking_water', 'driving_school', 'embassy',\n                                            'fast_food', 'ferry_terminal', 'fire_station', 'food_court', 'fountain', 'fuel', 'grave_yard',\n                                            'hospital', 'hunting_stand', 'ice_cream', 'internet_cafe', 'kindergarten', 'library', 'marketplace',\n                                            'motorcycle_parking', 'nightclub', 'nursing_home', 'pharmacy', 'place_of_worship', 'police', 'post_box',\n                                            'post_office', 'prison', 'pub', 'public_bath', 'public_bookcase', 'recycling', 'restaurant', 'school',\n                                            'shelter', 'shower', 'social_facility', 'taxi', 'telephone', 'theatre', 'toilets', 'townhall',\n                                            'university', 'vehicle_inspection', 'veterinary') THEN amenity ELSE NULL END,\n        'amenity_' || CASE WHEN amenity IN ('waste_disposal') AND way_area IS NOT NULL THEN amenity ELSE NULL END, -- Waste disposal points are rendered in the low priority layer\n        'amenity_' || CASE WHEN amenity IN ('parking_entrance')\n                                AND tags->'parking' IN ('underground')\n                                AND (access IS NULL OR access NOT IN ('private', 'no'))\n                                AND way_area IS NULL -- Only parking points are rendered\n                          THEN amenity ELSE NULL END,\n        'amenity_' || CASE WHEN amenity IN ('parking') AND (tags->'parking' NOT IN ('underground') OR (tags->'parking') IS NULL) THEN amenity ELSE NULL END,\n        'amenity_' || CASE WHEN amenity IN ('vending_machine') AND tags->'vending' IN ('excrement_bags', 'parking_tickets', 'public_transport_tickets') THEN amenity ELSE NULL END,\n        'advertising_' || CASE WHEN tags->'advertising' in ('column') THEN tags->'advertising' else NULL END,\n        'emergency_' || CASE WHEN tags->'emergency' IN ('phone') AND way_area IS NULL THEN tags->'emergency' ELSE NULL END,\n        'shop' || CASE WHEN shop IN ('no', 'vacant', 'closed', 'disused', 'empty') OR shop IS NULL THEN NULL ELSE '' END,\n        'leisure_' || CASE WHEN leisure IN ('amusement_arcade', 'beach_resort', 'bird_hide', 'bowling_alley', 'dog_park', 'firepit', 'fishing',\n                                            'fitness_centre', 'fitness_station', 'garden', 'golf_course', 'ice_rink', 'marina', 'miniature_golf',\n                                            'nature_reserve', 'outdoor_seating', 'park', 'picnic_table', 'pitch', 'playground', 'recreation_ground',\n                                            'sauna', 'slipway', 'sports_centre', 'stadium', 'swimming_area', 'swimming_pool', 'track', 'water_park') THEN leisure ELSE NULL END,\n        'power_' || CASE WHEN power IN ('plant', 'station', 'generator', 'sub_station', 'substation') THEN power ELSE NULL END,\n        'man_made_' || CASE WHEN (man_made IN ('chimney', 'communications_tower', 'crane', 'lighthouse', 'mast', 'obelisk', 'silo', 'storage_tank',\n                                               'telescope', 'tower', 'wastewater_plant', 'water_tower', 'water_works', 'windmill', 'works')\n                                    AND (tags->'location' NOT IN ('roof', 'rooftop') OR NOT (tags ? 'location'))) THEN man_made ELSE NULL END,\n        'landuse_' || CASE WHEN landuse IN ('reservoir', 'basin', 'recreation_ground', 'village_green', 'quarry', 'vineyard', 'orchard', 'cemetery',\n                                            'residential', 'garages', 'meadow', 'grass', 'allotments', 'forest', 'farmyard', 'farmland',\n                                            'greenhouse_horticulture', 'retail', 'industrial', 'railway', 'commercial', 'brownfield', 'landfill',\n                                            'construction', 'military', 'plant_nursery') THEN landuse ELSE NULL END,\n        'natural_' || CASE WHEN \"natural\" IN ('peak', 'volcano', 'saddle', 'cave_entrance') AND way_area IS NULL THEN \"natural\" ELSE NULL END,\n        'natural_' || CASE WHEN \"natural\" IN ('wood', 'peak', 'volcano', 'saddle', 'cave_entrance', 'water', 'mud', 'wetland', 'marsh', 'bay', 'spring',\n                                              'scree', 'shingle', 'bare_rock', 'sand', 'heath', 'grassland', 'scrub', 'beach', 'glacier', 'tree', 'strait', 'cape')\n                                              THEN \"natural\" ELSE NULL END,\n        'waterway_' || CASE WHEN \"waterway\" IN ('waterfall') AND way_area IS NULL THEN waterway ELSE NULL END,\n        'place_' || CASE WHEN place IN ('island', 'islet') THEN place ELSE NULL END,\n        'historic_' || CASE WHEN historic IN ('memorial', 'monument', 'archaeological_site', 'fort', 'castle', 'manor', 'city_gate')\n                      THEN historic ELSE NULL END,\n        'military_'|| CASE WHEN military IN ('danger_area', 'bunker') THEN military ELSE NULL END,\n        'highway_' || CASE WHEN highway IN ('services', 'rest_area', 'bus_stop', 'elevator', 'traffic_signals') THEN highway ELSE NULL END,\n        'highway_'|| CASE WHEN tags @> 'ford=>yes' OR tags @> 'ford=>stepping_stones' AND way_area IS NULL THEN 'ford' ELSE NULL END,\n        'boundary_' || CASE WHEN boundary IN ('aboriginal_lands', 'national_park')\n                                  OR (boundary = 'protected_area' AND tags->'protect_class' IN ('1','1a','1b','2','3','4','5','6','7','24','97','98','99'))\n                                  THEN boundary ELSE NULL END,\n        'tourism_' || CASE WHEN tourism IN ('information') THEN tourism ELSE NULL END,\n        'office' || CASE WHEN tags->'office' IN ('no', 'vacant', 'closed', 'disused', 'empty') OR (tags->'office') IS NULL THEN NULL ELSE '' END,\n        'barrier_' || CASE WHEN barrier IN ('toll_booth') AND way_area IS NULL THEN barrier ELSE NULL END,\n        'waterway_' || CASE WHEN waterway IN ('dam', 'weir', 'dock') THEN waterway ELSE NULL END,\n        'man_made_' || CASE WHEN man_made IN ('cross') AND way_area IS NULL THEN man_made ELSE NULL END,\n        'historic_' || CASE WHEN historic IN ('wayside_cross', 'wayside_shrine') AND way_area IS NULL THEN historic ELSE NULL END,\n        'tourism_' || CASE WHEN tourism IN ('viewpoint', 'attraction') THEN tourism ELSE NULL END,\n        'place_' || CASE WHEN place IN ('locality') AND way_area IS NULL THEN place ELSE NULL END\n      ) AS feature,\n      access,\n      CASE\n        WHEN \"natural\" IN ('peak', 'volcano', 'saddle') THEN\n          CASE\n            WHEN tags->'ele' ~ '^-?\\d{1,4}(\\.\\d+)?$' THEN (tags->'ele')::NUMERIC\n            ELSE NULL\n          END\n        WHEN \"waterway\" IN ('waterfall') THEN\n          CASE\n            WHEN tags->'height' ~ '^\\d{1,3}(\\.\\d+)?( m)?$' THEN (SUBSTRING(tags->'height', '^(\\d{1,3}(\\.\\d+)?)( m)?$'))::NUMERIC\n            ELSE NULL\n          END\n        ELSE NULL\n      END AS score,\n      religion,\n      tags->'denomination' as denomination,\n      tags->'generator:source' as \"generator:source\",\n      CASE\n        WHEN (man_made IN ('mast', 'tower', 'chimney', 'crane') AND (tags->'location' NOT IN ('roof', 'rooftop') OR (tags->'location') IS NULL))\n              OR waterway IN ('waterfall') THEN\n          CASE\n            WHEN tags->'height' ~ '^\\d{1,3}(\\.\\d+)?( m)?$' THEN (SUBSTRING(tags->'height', '^(\\d{1,3}(\\.\\d+)?)( m)?$'))::NUMERIC\n            ELSE NULL\n          END\n        ELSE NULL\n      END AS height,\n      tags->'location' as location,\n      tags->'icao' as icao,\n      tags->'iata' as iata,\n      tags->'office' as office,\n      tags->'recycling_type' as recycling_type,\n      tags->'tower:construction' as \"tower:construction\",\n      tags->'tower:type' as \"tower:type\",\n      tags->'telescope:type' as \"telescope:type\",\n      CASE\n        WHEN man_made IN ('telescope') THEN\n          CASE\n            WHEN tags->'telescope:diameter' ~ '^-?\\d{1,4}(\\.\\d+)?$' THEN (tags->'telescope:diameter')::NUMERIC\n            ELSE NULL\n          END\n        ELSE NULL\n      END AS \"telescope:diameter\",\n      tags->'castle_type' as castle_type,\n      tags->'sport' as sport,\n      tags->'information' as information,\n      tags->'memorial' as memorial,\n      tags->'artwork_type' as artwork_type,\n      tags->'vending' as vending,\n      CASE WHEN shop IN ('supermarket', 'bag', 'bakery', 'beauty', 'bed', 'bookmaker', 'books', 'butcher', 'carpet', 'clothes', 'computer',\n                        'confectionery', 'fashion', 'convenience', 'department_store', 'doityourself', 'hardware', 'fabric', 'fishmonger', 'florist',\n                        'garden_centre', 'hairdresser', 'hifi', 'ice_cream', 'car', 'car_repair', 'bicycle', 'mall', 'pet',\n                        'photo', 'photo_studio', 'photography', 'seafood', 'shoes', 'alcohol', 'gift', 'furniture', 'kiosk',\n                        'mobile_phone', 'motorcycle', 'musical_instrument', 'newsagent', 'optician', 'jewelry', 'jewellery',\n                        'electronics', 'chemist', 'toys', 'travel_agency', 'car_parts', 'greengrocer', 'farm', 'stationery',\n                        'laundry', 'dry_cleaning', 'beverages', 'perfumery', 'cosmetics', 'variety_store', 'wine', 'outdoor',\n                        'copyshop', 'sports', 'deli', 'tobacco', 'art', 'tea', 'coffee', 'tyres', 'pastry', 'chocolate',\n                        'music', 'medical_supply', 'dairy', 'video_games', 'houseware', 'ticket', 'charity', 'second_hand',\n                        'interior_decoration', 'video', 'paint', 'massage', 'trade', 'wholesale') THEN shop\n                        ELSE 'other' END AS shop,\n      CASE WHEN building = 'no' OR building IS NULL THEN 'no' ELSE 'yes' END AS is_building,\n      tags -> 'operator' AS operator,\n      ref,\n      way_area,\n      way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels\n    FROM\n      (SELECT\n          ST_PointOnSurface(way) AS way,\n          name,\n          access,\n          aeroway,\n          amenity,\n          barrier,\n          boundary,\n          building,\n          highway,\n          historic,\n          landuse,\n          leisure,\n          man_made,\n          military,\n          \"natural\",\n          place,\n          power,\n          ref,\n          religion,\n          shop,\n          tourism,\n          waterway,\n          tags,\n          way_area\n        FROM planet_osm_polygon\n        WHERE way && !bbox!\n      UNION ALL\n      SELECT\n          way,\n          name,\n          access,\n          aeroway,\n          amenity,\n          barrier,\n          boundary,\n          building,\n          highway,\n          historic,\n          landuse,\n          leisure,\n          man_made,\n          military,\n          \"natural\",\n          place,\n          power,\n          ref,\n          religion,\n          shop,\n          tourism,\n          waterway,\n          tags,\n          NULL AS way_area\n        FROM planet_osm_point\n        WHERE way && !bbox!\n      ) _\n    ) AS features\n  WHERE feature IS NOT NULL\n  ORDER BY score DESC NULLS LAST,\n    way_pixels DESC NULLS LAST\n  ) AS amenity_points"
      },
      "properties": {
        "minzoom": 10
      },
      "layerId": "amenity-points"
    },
    {
      "id": "amenity-line",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n  way,\n  name,\n  layer,\n  COALESCE(\n   'highway_' || CASE WHEN tags @> 'ford=>yes' OR tags @> 'ford=>stepping_stones' THEN 'ford' ELSE NULL END,\n   'leisure_' || CASE WHEN leisure IN ('slipway', 'track') THEN leisure ELSE NULL END,\n   'attraction_' || CASE WHEN tags @> 'attraction=>water_slide' THEN 'water_slide' ELSE NULL END\n    ) AS feature\n  FROM planet_osm_line\n  -- The upcoming where clause is needed for performance only, as the CASE statements would end up doing the equivalent filtering\n  WHERE tags @> 'ford=>yes' OR tags @> 'ford=>stepping_stones'\n    OR leisure IN ('slipway', 'track')\n    OR tags @> 'attraction=>water_slide'\n  ORDER BY COALESCE(layer,0)\n) AS amenity_line"
      },
      "properties": {
        "minzoom": 16
      },
      "layerId": "amenity-line"
    },
    {
      "id": "power-towers",
      "geometry": "point",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    power\nFROM planet_osm_point\nWHERE power IN ('tower', 'pole')\nORDER BY\n  CASE\n    WHEN power = 'tower' THEN 1\n    WHEN power = 'pole' THEN 2\n    ELSE NULL\n  END\n) AS power_towers"
      },
      "properties": {
        "minzoom": 14
      },
      "layerId": "power-towers"
    },
    {
      "id": "roads-text-ref-low-zoom",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    highway,\n    height,\n    width,\n    refs\n  FROM (\n    SELECT\n        way,\n        osm_id,\n        highway,\n        array_length(refs,1) AS height,\n        (SELECT MAX(char_length(ref)) FROM unnest(refs) AS u(ref)) AS width,\n        array_to_string(refs, E'\\n') AS refs\n      FROM (\n        SELECT\n            way,\n            osm_id,\n            highway,\n            string_to_array(ref, ';') AS refs\n        FROM planet_osm_roads\n          WHERE highway IN ('motorway', 'trunk', 'primary', 'secondary')\n          AND ref IS NOT NULL\n      ) AS p) AS q\n  WHERE height <= 4 AND width <= 11\n  ORDER BY\n    CASE\n      WHEN highway = 'motorway' THEN 38\n      WHEN highway = 'trunk' THEN 37\n      WHEN highway = 'primary' THEN 36\n      WHEN highway = 'secondary' THEN 35\n      ELSE NULL\n    END DESC NULLS LAST,\n    height DESC,\n    width DESC,\n    refs,\n    osm_id\n) AS roads_text_ref_low_zoom"
      },
      "properties": {
        "minzoom": 10,
        "maxzoom": 12
      },
      "layerId": "roads-text-ref-low-zoom"
    },
    {
      "id": "junctions",
      "geometry": "point",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    highway,\n    junction,\n    ref,\n    name,\n    NULL AS way_pixels\n  FROM planet_osm_point\n  WHERE highway = 'motorway_junction' OR highway = 'traffic_signals' OR junction = 'yes'\nUNION ALL\n  SELECT\n    way,\n    highway,\n    junction,\n    ref,\n    name,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels\n  FROM planet_osm_polygon\n  WHERE junction = 'yes'\n  ORDER BY way_pixels DESC NULLS LAST\n) AS junctions"
      },
      "properties": {
        "minzoom": 11
      },
      "layerId": "junctions"
    },
    {
      "id": "bridge-text",
      "geometry": "polygon",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels,\n    man_made,\n    name\n  FROM planet_osm_polygon\n  WHERE man_made = 'bridge'\n  ORDER BY way_area DESC\n) AS bridge_text"
      },
      "properties": {
        "minzoom": 11
      },
      "layerId": "bridge-text"
    },
    {
      "id": "roads-text-ref",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    highway,\n    height,\n    width,\n    refs\n  FROM (\n    SELECT\n        osm_id,\n        way,\n        highway,\n        array_length(refs,1) AS height,\n        (SELECT MAX(char_length(ref)) FROM unnest(refs) AS u(ref)) AS width,\n        array_to_string(refs, E'\\n') AS refs\n      FROM (\n        SELECT\n            osm_id,\n            way,\n            COALESCE(\n              CASE WHEN highway IN ('motorway', 'trunk', 'primary', 'secondary', 'tertiary', 'unclassified', 'residential', 'track') THEN highway ELSE NULL END,\n              CASE WHEN aeroway IN ('runway', 'taxiway') THEN aeroway ELSE NULL END\n            ) AS highway,\n            string_to_array(ref, ';') AS refs\n          FROM planet_osm_line\n          WHERE (highway IN ('motorway', 'trunk', 'primary', 'secondary', 'tertiary', 'unclassified', 'residential', 'track') OR aeroway IN ('runway', 'taxiway'))\n            AND ref IS NOT NULL\n      ) AS p) AS q\n  WHERE height <= 4 AND width <= 11\n  ORDER BY\n    CASE\n      WHEN highway = 'motorway' THEN 38\n      WHEN highway = 'trunk' THEN 37\n      WHEN highway = 'primary' THEN 36\n      WHEN highway = 'secondary' THEN 35\n      WHEN highway = 'tertiary' THEN 34\n      WHEN highway = 'unclassified' THEN 33\n      WHEN highway = 'residential' THEN 32\n      WHEN highway = 'track' THEN 30\n      WHEN highway = 'runway' THEN 6\n      WHEN highway = 'taxiway' THEN 5\n      ELSE NULL\n    END DESC NULLS LAST,\n    height DESC,\n    width DESC,\n    refs,\n    osm_id\n) AS roads_text_ref"
      },
      "properties": {
        "minzoom": 13
      },
      "layerId": "roads-text-ref"
    },
    {
      "id": "roads-area-text-name",
      "geometry": "polygon",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels,\n    highway,\n    place,\n    leisure,\n    name\n  FROM planet_osm_polygon\n  WHERE highway IN ('residential', 'unclassified', 'pedestrian', 'service', 'footway', 'cycleway', 'living_street', 'track', 'path', 'platform')\n    OR (railway IN ('platform')\n        AND (tags->'location' NOT IN ('underground') OR (tags->'location') IS NULL)\n        AND (tunnel NOT IN ('yes', 'building_passage') OR tunnel IS NULL)\n        AND (covered NOT IN ('yes') OR covered IS NULL))\n    OR (place IN ('square')\n        AND (leisure IS NULL OR NOT leisure IN ('park', 'recreation_ground', 'garden')))\n    AND name IS NOT NULL\n  ORDER BY way_area DESC\n) AS roads_area_text_name"
      },
      "properties": {
        "minzoom": 15
      },
      "layerId": "roads-area-text-name"
    },
    {
      "id": "roads-text-name",
      "class": "directions",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    CASE WHEN substr(highway, length(highway)-4, 5) = '_link' THEN substr(highway, 0, length(highway)-4) ELSE highway END,\n    CASE WHEN (tunnel = 'yes' OR tunnel = 'building_passage' OR covered = 'yes') THEN 'yes' ELSE 'no' END AS tunnel,\n    construction,\n    name,\n    CASE\n      WHEN oneway IN ('yes', '-1') THEN oneway\n      WHEN junction IN ('roundabout') AND (oneway IS NULL OR NOT oneway IN ('no', 'reversible')) THEN 'yes'\n      ELSE NULL\n    END AS oneway,\n    horse, bicycle\n  FROM planet_osm_line l\n  JOIN (VALUES -- this join is also putting a condition on what is selected. features not matching it do not make it into the results.\n      ('motorway', 380),\n      ('trunk', 370),\n      ('primary', 360),\n      ('secondary', 350),\n      ('tertiary', 340),\n      ('residential', 330),\n      ('unclassified', 330),\n      ('road', 330),\n      ('living_street', 320),\n      ('pedestrian', 310),\n      ('raceway', 300),\n      ('motorway_link', 240),\n      ('trunk_link', 230),\n      ('primary_link', 220),\n      ('secondary_link', 210),\n      ('tertiary_link', 200),\n      ('service', 150),\n      ('construction', 10)\n    ) AS ordertable (highway, prio)\n    USING (highway)\n  WHERE highway IN ('motorway', 'motorway_link', 'trunk', 'trunk_link', 'primary', 'primary_link', 'secondary', 'secondary_link', 'tertiary',\n                    'tertiary_link', 'residential', 'unclassified', 'road', 'service', 'pedestrian', 'raceway', 'living_street', 'construction')\n    AND (name IS NOT NULL\n      OR oneway IN ('yes', '-1')\n      OR junction IN ('roundabout'))\n  ORDER BY\n    z_order DESC, -- put important roads first\n    COALESCE(layer, 0), -- put top layered roads first\n    length(name) DESC, -- Try to fit big labels in first\n    name DESC, -- Force a consistent ordering between differently named streets\n    l.osm_id DESC -- Force an ordering for streets of the same name, e.g. dualized roads\n) AS roads_text_name"
      },
      "properties": {
        "minzoom": 13
      },
      "layerId": "roads-text-name"
    },
    {
      "id": "paths-text-name",
      "class": "directions",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    highway,\n    construction,\n    name,\n    CASE\n      WHEN oneway IN ('yes', '-1') THEN oneway\n      WHEN junction IN ('roundabout') AND (oneway IS NULL OR NOT oneway IN ('no', 'reversible')) THEN 'yes'\n      ELSE NULL\n    END AS oneway,\n    horse,\n    bicycle\n  FROM planet_osm_line\n  WHERE highway IN ('bridleway', 'footway', 'cycleway', 'path', 'track', 'steps', 'construction')\n    AND (name IS NOT NULL\n      OR oneway IN ('yes', '-1')\n      OR junction IN ('roundabout'))\n) AS paths_text_name"
      },
      "properties": {
        "minzoom": 15
      },
      "layerId": "paths-text-name"
    },
    {
      "id": "railways-text-name",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    CASE WHEN railway = 'preserved' AND service IN ('spur', 'siding', 'yard') THEN 'INT-preserved-ssy'::text\n         WHEN (railway = 'rail' AND service IN ('spur', 'siding', 'yard')) THEN 'INT-spur-siding-yard'\n         WHEN (railway = 'tram' AND service IN ('spur', 'siding', 'yard')) THEN 'tram-service' ELSE railway END AS railway,\n    CASE WHEN (tunnel = 'yes' OR tunnel = 'building_passage' OR covered = 'yes') THEN 'yes' ELSE 'no' END AS tunnel,\n    tags->'highspeed' as highspeed,\n    tags->'usage' as usage,\n    construction,\n    name\n  FROM planet_osm_line l\n  WHERE railway IN ('rail', 'subway', 'narrow_gauge', 'light_rail', 'preserved', 'funicular',\n                    'monorail', 'miniature', 'tram', 'disused', 'construction')\n    AND (tunnel IS NULL OR NOT tunnel IN ('yes', 'building_passage'))\n    AND highway IS NULL -- Prevent duplicate rendering\n    AND name IS NOT NULL\n  ORDER BY\n    z_order DESC, -- put important rails first\n    COALESCE(layer, 0), -- put top layered rails first\n    length(name) DESC, -- Try to fit big labels in first\n    name DESC, -- Force a consistent ordering between differently named railways\n    l.osm_id DESC -- Force an ordering for railways of the same name, e.g. dualized rails\n) AS railways_text_name"
      },
      "properties": {
        "minzoom": 11
      },
      "layerId": "railways-text-name"
    },
    {
      "id": "text-poly-low-zoom",
      "class": "text-low-zoom",
      "geometry": "polygon",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels,\n    COALESCE(\n      'landuse_' || CASE WHEN landuse IN ('forest', 'military', 'farmland') THEN landuse ELSE NULL END,\n      'military_' || CASE WHEN military IN ('danger_area') THEN military ELSE NULL END,\n      'natural_' || CASE WHEN \"natural\" IN ('wood', 'glacier', 'sand', 'scree', 'shingle', 'bare_rock',\n                                            'water', 'bay', 'strait') THEN \"natural\" ELSE NULL END,\n      'place_' || CASE WHEN place IN ('island') THEN place ELSE NULL END,\n      'boundary_' || CASE WHEN (boundary = 'protected_area' AND tags->'protect_class' = '24') THEN 'aboriginal_lands'\n                          WHEN boundary IN ('aboriginal_lands', 'national_park')\n                               OR (boundary = 'protected_area' AND tags->'protect_class' IN ('1','1a','1b','2','3','4','5','6','7','97','98','99'))\n                               THEN boundary ELSE NULL END,\n      'leisure_' || CASE WHEN leisure IN ('nature_reserve') THEN leisure ELSE NULL END\n    ) AS feature,\n    name,\n    CASE WHEN building = 'no' OR building IS NULL THEN 'no' ELSE 'yes' END AS is_building -- always no with the where conditions\n  FROM planet_osm_polygon\n  WHERE (landuse IN ('forest', 'military', 'farmland')\n      OR military IN ('danger_area')\n      OR \"natural\" IN ('wood', 'glacier', 'sand', 'scree', 'shingle', 'bare_rock', 'water', 'bay', 'strait')\n      OR \"place\" IN ('island')\n      OR boundary IN ('aboriginal_lands', 'national_park')\n      OR (boundary = 'protected_area' AND tags->'protect_class' IN ('1','1a','1b','2','3','4','5','6','7','24','97','98','99'))\n      OR leisure IN ('nature_reserve'))\n    AND building IS NULL\n    AND name IS NOT NULL\n  ORDER BY way_area DESC\n) AS text_poly_low_zoom"
      },
      "properties": {
        "minzoom": 0,
        "maxzoom": 9
      },
      "layerId": "text-poly-low-zoom"
    },
    {
      "id": "text-line",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n  way,\n    NULL as way_pixels,\n    COALESCE('man_made_' || man_made, 'waterway_' || waterway, 'natural_' || \"natural\") AS feature,\n    access,\n    name,\n    tags->'operator' as operator,\n    ref,\n    NULL AS way_area,\n    CASE WHEN building = 'no' OR building IS NULL THEN 'no' ELSE 'yes' END AS is_building\n  FROM planet_osm_line\n  WHERE (man_made IN ('pier', 'breakwater', 'groyne', 'embankment')\n      OR waterway IN ('dam', 'weir')\n      OR \"natural\" IN ('cliff'))\n    AND name IS NOT NULL\n) AS text_line"
      },
      "properties": {
        "minzoom": 10
      },
      "layerId": "text-line"
    },
    {
      "id": "text-point",
      "geometry": "point",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    *\n  FROM\n  (SELECT -- This subselect allows filtering on the feature column\n      way,\n      CONCAT(\n        name,\n        E'\\n' || CONCAT( -- by doing this with a || if both the ele and height branches are null, this entire expression is null and only name is used\n          CASE\n            WHEN (tags ? 'ele') AND tags->'ele' ~ '^-?\\d{1,4}(\\.\\d+)?$'\n              AND (\"natural\" IN ('peak', 'volcano', 'saddle')\n                OR tourism = 'alpine_hut' OR (tourism = 'information' AND tags->'information' = 'guidepost')\n                OR amenity = 'shelter')\n            THEN CONCAT(REPLACE(ROUND((tags->'ele')::NUMERIC)::TEXT, '-', U&'\\2212'), U&'\\00A0', 'm') ELSE NULL END,\n          CASE\n            WHEN (tags ? 'height') AND tags->'height' ~ '^\\d{1,3}(\\.\\d+)?$'\n              AND waterway = 'waterfall'\n            THEN CONCAT(ROUND((tags->'height')::NUMERIC)::TEXT, U&'\\00A0', 'm') ELSE NULL END\n          )\n        ) AS name,\n      COALESCE(\n        'aeroway_' || CASE WHEN aeroway IN ('gate', 'apron', 'helipad', 'aerodrome') THEN aeroway ELSE NULL END,\n        'tourism_' || CASE WHEN tourism IN ('alpine_hut', 'apartment', 'artwork', 'camp_site', 'caravan_site', 'chalet', 'gallery', 'guest_house',\n                                            'hostel', 'hotel', 'motel', 'museum', 'picnic_site', 'theme_park', 'wilderness_hut',\n                                            'zoo') THEN tourism ELSE NULL END,\n        'amenity_' || CASE WHEN amenity IN ('arts_centre', 'atm', 'bank', 'bar', 'bbq', 'bicycle_parking', 'bicycle_rental',\n                                            'bicycle_repair_station','biergarten', 'boat_rental', 'bureau_de_change', 'bus_station', 'cafe',\n                                            'car_rental', 'car_wash', 'casino', 'charging_station', 'childcare', 'cinema', 'clinic', 'college',\n                                            'community_centre', 'courthouse', 'dentist', 'doctors', 'drinking_water', 'driving_school', 'embassy',\n                                            'fast_food', 'ferry_terminal', 'fire_station', 'food_court', 'fountain', 'fuel', 'grave_yard',\n                                            'hospital', 'hunting_stand', 'ice_cream', 'internet_cafe', 'kindergarten', 'library', 'marketplace',\n                                            'motorcycle_parking', 'nightclub', 'nursing_home', 'pharmacy', 'place_of_worship', 'police', 'post_box',\n                                            'post_office', 'prison', 'pub', 'public_bath', 'public_bookcase', 'recycling', 'restaurant', 'school',\n                                            'shelter', 'shower', 'social_facility', 'taxi', 'telephone', 'theatre', 'toilets', 'townhall',\n                                            'university', 'vehicle_inspection', 'veterinary') THEN amenity ELSE NULL END,\n        'amenity_' || CASE WHEN amenity IN ('waste_disposal') AND way_area IS NOT NULL THEN amenity ELSE NULL END, -- Waste disposal points are rendered in the low priority layer\n        'amenity_' || CASE WHEN amenity IN ('parking_entrance')\n                                AND tags->'parking' IN ('underground')\n                                AND (access IS NULL OR access NOT IN ('private', 'no'))\n                                AND way_area IS NULL -- Only parking points are rendered\n                          THEN amenity ELSE NULL END,\n        'amenity_' || CASE WHEN amenity IN ('parking') AND (tags->'parking' NOT IN ('underground') OR (tags->'parking') IS NULL) THEN amenity ELSE NULL END,\n        'amenity_' || CASE WHEN amenity IN ('vending_machine') AND tags->'vending' IN ('excrement_bags', 'parking_tickets', 'public_transport_tickets') THEN amenity ELSE NULL END,\n        'advertising_' || CASE WHEN tags->'advertising' in ('column') THEN tags->'advertising' else NULL END,\n        'emergency_' || CASE WHEN tags->'emergency' IN ('phone') AND way_area IS NULL THEN tags->'emergency' ELSE NULL END,\n        'shop' || CASE WHEN shop IN ('no', 'vacant', 'closed', 'disused', 'empty') OR shop IS NULL THEN NULL ELSE '' END,\n        'leisure_' || CASE WHEN leisure IN ('amusement_arcade', 'beach_resort', 'bird_hide', 'bowling_alley', 'dog_park', 'firepit', 'fishing',\n                                            'fitness_centre', 'fitness_station', 'garden', 'golf_course', 'ice_rink', 'marina', 'miniature_golf',\n                                            'nature_reserve', 'outdoor_seating', 'park', 'picnic_table', 'pitch', 'playground', 'recreation_ground',\n                                            'sauna', 'slipway', 'sports_centre', 'stadium', 'swimming_area', 'swimming_pool', 'track', 'water_park') THEN leisure ELSE NULL END,\n        'power_' || CASE WHEN power IN ('plant', 'station', 'generator', 'sub_station', 'substation') THEN power ELSE NULL END,\n        'man_made_' || CASE WHEN (man_made IN ('chimney', 'communications_tower', 'crane', 'lighthouse', 'mast', 'obelisk', 'silo', 'storage_tank',\n                                               'telescope', 'tower', 'wastewater_plant', 'water_tower', 'water_works', 'windmill', 'works')\n                                    AND (tags->'location' NOT IN ('roof', 'rooftop') OR NOT (tags ? 'location'))) THEN man_made ELSE NULL END,\n        'landuse_' || CASE WHEN landuse IN ('reservoir', 'basin', 'recreation_ground', 'village_green', 'quarry', 'vineyard', 'orchard', 'cemetery',\n                                            'residential', 'garages', 'meadow', 'grass', 'allotments', 'forest', 'farmyard', 'farmland',\n                                            'greenhouse_horticulture', 'retail', 'industrial', 'railway', 'commercial', 'brownfield', 'landfill',\n                                            'construction', 'military', 'plant_nursery') THEN landuse ELSE NULL END,\n        'natural_' || CASE WHEN \"natural\" IN ('peak', 'volcano', 'saddle', 'cave_entrance') AND way_area IS NULL THEN \"natural\" ELSE NULL END,\n        'natural_' || CASE WHEN \"natural\" IN ('wood', 'peak', 'volcano', 'saddle', 'cave_entrance', 'water', 'mud', 'wetland', 'marsh', 'bay', 'spring',\n                                              'scree', 'shingle', 'bare_rock', 'sand', 'heath', 'grassland', 'scrub', 'beach', 'glacier', 'tree', 'strait', 'cape')\n                                              THEN \"natural\" ELSE NULL END,\n        'waterway_' || CASE WHEN \"waterway\" IN ('waterfall') AND way_area IS NULL THEN waterway ELSE NULL END,\n        'place_' || CASE WHEN place IN ('island', 'islet') THEN place ELSE NULL END,\n        'historic_' || CASE WHEN historic IN ('memorial', 'monument', 'archaeological_site', 'fort', 'castle', 'manor', 'city_gate')\n                      THEN historic ELSE NULL END,\n        'military_'|| CASE WHEN military IN ('danger_area', 'bunker') THEN military ELSE NULL END,\n        'highway_' || CASE WHEN highway IN ('services', 'rest_area', 'bus_stop', 'elevator', 'traffic_signals') THEN highway ELSE NULL END,\n        'highway_'|| CASE WHEN tags @> 'ford=>yes' OR tags @> 'ford=>stepping_stones' AND way_area IS NULL THEN 'ford' ELSE NULL END,\n        'boundary_' || CASE WHEN boundary IN ('aboriginal_lands', 'national_park')\n                                  OR (boundary = 'protected_area' AND tags->'protect_class' IN ('1','1a','1b','2','3','4','5','6','7','24','97','98','99'))\n                                  THEN boundary ELSE NULL END,\n        'tourism_' || CASE WHEN tourism IN ('information') THEN tourism ELSE NULL END,\n        'office' || CASE WHEN tags->'office' IN ('no', 'vacant', 'closed', 'disused', 'empty') OR (tags->'office') IS NULL THEN NULL ELSE '' END,\n        'barrier_' || CASE WHEN barrier IN ('toll_booth') AND way_area IS NULL THEN barrier ELSE NULL END,\n        'waterway_' || CASE WHEN waterway IN ('dam', 'weir', 'dock') THEN waterway ELSE NULL END,\n        'man_made_' || CASE WHEN man_made IN ('cross') AND way_area IS NULL THEN man_made ELSE NULL END,\n        'historic_' || CASE WHEN historic IN ('wayside_cross', 'wayside_shrine') AND way_area IS NULL THEN historic ELSE NULL END,\n        'tourism_' || CASE WHEN tourism IN ('viewpoint', 'attraction') THEN tourism ELSE NULL END,\n        'place_' || CASE WHEN place IN ('locality') AND way_area IS NULL THEN place ELSE NULL END\n      ) AS feature,\n      access,\n      CASE\n        WHEN \"natural\" IN ('peak', 'volcano', 'saddle') THEN\n          CASE\n            WHEN tags->'ele' ~ '^-?\\d{1,4}(\\.\\d+)?$' THEN (tags->'ele')::NUMERIC\n            ELSE NULL\n          END\n        WHEN \"waterway\" IN ('waterfall') THEN\n          CASE\n            WHEN tags->'height' ~ '^\\d{1,3}(\\.\\d+)?( m)?$' THEN (SUBSTRING(tags->'height', '^(\\d{1,3}(\\.\\d+)?)( m)?$'))::NUMERIC\n            ELSE NULL\n          END\n        ELSE NULL\n      END AS score,\n      religion,\n      tags->'denomination' as denomination,\n      tags->'generator:source' as \"generator:source\",\n      CASE\n        WHEN (man_made IN ('mast', 'tower', 'chimney', 'crane') AND (tags->'location' NOT IN ('roof', 'rooftop') OR (tags->'location') IS NULL))\n              OR waterway IN ('waterfall') THEN\n          CASE\n            WHEN tags->'height' ~ '^\\d{1,3}(\\.\\d+)?( m)?$' THEN (SUBSTRING(tags->'height', '^(\\d{1,3}(\\.\\d+)?)( m)?$'))::NUMERIC\n            ELSE NULL\n          END\n        ELSE NULL\n      END AS height,\n      tags->'location' as location,\n      tags->'icao' as icao,\n      tags->'iata' as iata,\n      tags->'office' as office,\n      tags->'recycling_type' as recycling_type,\n      tags->'tower:construction' as \"tower:construction\",\n      tags->'tower:type' as \"tower:type\",\n      tags->'telescope:type' as \"telescope:type\",\n      CASE\n        WHEN man_made IN ('telescope') THEN\n          CASE\n            WHEN tags->'telescope:diameter' ~ '^-?\\d{1,4}(\\.\\d+)?$' THEN (tags->'telescope:diameter')::NUMERIC\n            ELSE NULL\n          END\n        ELSE NULL\n      END AS \"telescope:diameter\",\n      tags->'castle_type' as castle_type,\n      tags->'sport' as sport,\n      tags->'information' as information,\n      tags->'memorial' as memorial,\n      tags->'artwork_type' as artwork_type,\n      tags->'vending' as vending,\n      CASE WHEN shop IN ('supermarket', 'bag', 'bakery', 'beauty', 'bed', 'bookmaker', 'books', 'butcher', 'carpet', 'clothes', 'computer',\n                        'confectionery', 'fashion', 'convenience', 'department_store', 'doityourself', 'hardware', 'fabric', 'fishmonger', 'florist',\n                        'garden_centre', 'hairdresser', 'hifi', 'ice_cream', 'car', 'car_repair', 'bicycle', 'mall', 'pet',\n                        'photo', 'photo_studio', 'photography', 'seafood', 'shoes', 'alcohol', 'gift', 'furniture', 'kiosk',\n                        'mobile_phone', 'motorcycle', 'musical_instrument', 'newsagent', 'optician', 'jewelry', 'jewellery',\n                        'electronics', 'chemist', 'toys', 'travel_agency', 'car_parts', 'greengrocer', 'farm', 'stationery',\n                        'laundry', 'dry_cleaning', 'beverages', 'perfumery', 'cosmetics', 'variety_store', 'wine', 'outdoor',\n                        'copyshop', 'sports', 'deli', 'tobacco', 'art', 'tea', 'coffee', 'tyres', 'pastry', 'chocolate',\n                        'music', 'medical_supply', 'dairy', 'video_games', 'houseware', 'ticket', 'charity', 'second_hand',\n                        'interior_decoration', 'video', 'paint', 'massage', 'trade', 'wholesale') THEN shop\n                        ELSE 'other' END AS shop,\n      CASE WHEN building = 'no' OR building IS NULL THEN 'no' ELSE 'yes' END AS is_building,\n      tags -> 'operator' AS operator,\n      ref,\n      way_area,\n      way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels\n    FROM\n      (SELECT\n          ST_PointOnSurface(way) AS way,\n          name,\n          access,\n          aeroway,\n          amenity,\n          barrier,\n          boundary,\n          building,\n          highway,\n          historic,\n          landuse,\n          leisure,\n          man_made,\n          military,\n          \"natural\",\n          place,\n          power,\n          ref,\n          religion,\n          shop,\n          tourism,\n          waterway,\n          tags,\n          way_area\n        FROM planet_osm_polygon\n        WHERE way && !bbox!\n      UNION ALL\n      SELECT\n          way,\n          name,\n          access,\n          aeroway,\n          amenity,\n          barrier,\n          boundary,\n          building,\n          highway,\n          historic,\n          landuse,\n          leisure,\n          man_made,\n          military,\n          \"natural\",\n          place,\n          power,\n          ref,\n          religion,\n          shop,\n          tourism,\n          waterway,\n          tags,\n          NULL AS way_area\n        FROM planet_osm_point\n        WHERE way && !bbox!\n      ) _\n    ) AS features\n  WHERE feature IS NOT NULL\n  ORDER BY score DESC NULLS LAST,\n    way_pixels DESC NULLS LAST\n  ) AS amenity_points"
      },
      "properties": {
        "minzoom": 10
      },
      "layerId": "text-point"
    },
    {
      "id": "building-text",
      "geometry": "polygon",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    name,\n    ST_PointOnSurface(way) AS way,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels\n  FROM planet_osm_polygon\n  WHERE way && !bbox!\n    AND building IS NOT NULL\n    AND building NOT IN ('no')\n    AND name IS NOT NULL\n  ORDER BY way_area DESC\n) AS building_text"
      },
      "properties": {
        "minzoom": 14
      },
      "layerId": "building-text"
    },
    {
      "id": "interpolation",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way\n  FROM planet_osm_line\n  WHERE \"addr:interpolation\" IS NOT NULL\n) AS interpolation"
      },
      "properties": {
        "minzoom": 17
      },
      "layerId": "interpolation"
    },
    {
      "id": "addresses",
      "geometry": "point",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    \"addr:housenumber\" AS addr_housenumber,\n    \"addr:housename\" AS addr_housename,\n    tags->'addr:unit' AS addr_unit,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels\n  FROM planet_osm_polygon\n  WHERE ((\"addr:housenumber\" IS NOT NULL) OR (\"addr:housename\" IS NOT NULL) OR ((tags->'addr:unit') IS NOT NULL))\n    AND building IS NOT NULL\nUNION ALL\nSELECT\n    way,\n    \"addr:housenumber\" AS addr_housenumber,\n    \"addr:housename\" AS addr_housename,\n    tags->'addr:unit' AS addr_unit,\n    NULL AS way_pixels\n  FROM planet_osm_point\n  WHERE (\"addr:housenumber\" IS NOT NULL) OR (\"addr:housename\" IS NOT NULL) OR ((tags->'addr:unit') IS NOT NULL)\n  ORDER BY way_pixels DESC NULLS LAST\n) AS addresses"
      },
      "properties": {
        "minzoom": 17
      },
      "layerId": "addresses"
    },
    {
      "id": "water-lines-text",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    waterway,\n    lock,\n    name,\n    \"natural\",\n    tags-> 'lock_name' AS lock_name,\n    CASE WHEN tags->'intermittent' IN ('yes')\n      OR tags->'seasonal' IN ('yes', 'spring', 'summer', 'autumn', 'winter', 'wet_season', 'dry_season')\n      THEN 'yes' ELSE 'no' END AS int_intermittent,\n    CASE WHEN tunnel IN ('yes', 'culvert') THEN 'yes' ELSE 'no' END AS int_tunnel\n  FROM planet_osm_line\n  WHERE (waterway IN ('river', 'canal', 'stream', 'drain', 'ditch', 'wadi')\n         OR \"natural\" IN ('bay', 'strait'))\n    AND (tunnel IS NULL or tunnel != 'culvert')\n    AND name IS NOT NULL\n  ORDER BY COALESCE(layer,0)\n) AS water_lines_text"
      },
      "properties": {
        "minzoom": 13
      },
      "layerId": "water-lines-text"
    },
    {
      "id": "ferry-routes-text",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    name\n  FROM planet_osm_line\n  WHERE route = 'ferry'\n    AND osm_id > 0\n    AND name IS NOT NULL\n) AS ferry_routes_text"
      },
      "properties": {
        "minzoom": 13
      },
      "layerId": "ferry-routes-text"
    },
    {
      "id": "admin-text",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    name,\n    admin_level,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels\n  FROM planet_osm_polygon\n  WHERE boundary = 'administrative'\n    AND admin_level IN ('1', '2', '3', '4', '5', '6', '7', '8', '9', '10')\n    AND name IS NOT NULL\n  ORDER BY admin_level::integer ASC, way_area DESC\n) AS admin_text"
      },
      "properties": {
        "minzoom": 11
      },
      "layerId": "admin-text"
    },
    {
      "id": "protected-areas-text",
      "geometry": "linestring",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    name,\n    boundary,\n    tags->'protect_class' AS protect_class,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels\n  FROM planet_osm_polygon\n  WHERE (boundary IN ('aboriginal_lands', 'national_park')\n         OR leisure = 'nature_reserve'\n         OR (boundary = 'protected_area' AND tags->'protect_class' IN ('1','1a','1b','2','3','4','5','6','7','24','97','98','99')))\n    AND name IS NOT NULL\n) AS protected_areas_text"
      },
      "properties": {
        "minzoom": 13
      },
      "layerId": "protected-areas-text"
    },
    {
      "id": "amenity-low-priority",
      "class": "amenity-low-priority",
      "geometry": "point",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    COALESCE(\n      'highway_' || CASE WHEN highway IN ('mini_roundabout') THEN highway ELSE NULL END,\n      'railway_' || CASE WHEN railway IN ('level_crossing', 'crossing') THEN railway ELSE NULL END,\n      'amenity_' || CASE WHEN amenity IN ('bicycle_parking', 'motorcycle_parking', 'bench',\n                    'waste_basket', 'waste_disposal') THEN amenity ELSE NULL END,\n      'amenity_' || CASE WHEN amenity IN ('parking') AND (tags->'parking' NOT IN ('underground') OR (tags->'parking') IS NULL) THEN amenity ELSE NULL END,\n      'historic_' || CASE WHEN historic IN ('wayside_cross', 'wayside_shrine') THEN historic ELSE NULL END,\n      'man_made_' || CASE WHEN man_made IN ('cross') THEN man_made ELSE NULL END,\n      'barrier_' || CASE WHEN barrier IN ('bollard', 'gate', 'lift_gate', 'swing_gate', 'block', 'log', 'cattle_grid', 'stile', 'motorcycle_barrier', 'cycle_barrier', 'full-height_turnstile', 'turnstile', 'kissing_gate') THEN barrier ELSE NULL END\n    )  AS feature,\n    access,\n    CASE WHEN amenity IN ('waste_basket', 'waste_disposal') THEN 2 ELSE 1 END AS prio\n  FROM planet_osm_point p\n  WHERE highway IN ('mini_roundabout')\n     OR railway IN ('level_crossing', 'crossing')\n     OR amenity IN ('parking', 'bicycle_parking', 'motorcycle_parking', 'bench', 'waste_basket', 'waste_disposal')\n     OR historic IN ('wayside_cross', 'wayside_shrine')\n     OR man_made IN ('cross')\n     OR barrier IN ('bollard', 'gate', 'lift_gate', 'swing_gate', 'block', 'log', 'cattle_grid', 'stile', 'motorcycle_barrier', 'cycle_barrier', 'full-height_turnstile', 'turnstile', 'kissing_gate')\n  ORDER BY prio\n  ) AS amenity_low_priority"
      },
      "properties": {
        "minzoom": 14
      },
      "layerId": "amenity-low-priority"
    },
    {
      "id": "amenity-low-priority-poly",
      "class": "amenity-low-priority",
      "geometry": "polygon",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "postgis",
        "dbname": "gis",
        "key_field": "",
        "geometry_field": "way",
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    COALESCE(\n      'amenity_' || CASE WHEN amenity IN ('bicycle_parking', 'motorcycle_parking') THEN amenity ELSE NULL END,\n      'amenity_' || CASE WHEN amenity IN ('parking') AND (tags->'parking' NOT IN ('underground') OR (tags->'parking') IS NULL) THEN amenity ELSE NULL END,\n      'barrier_' || CASE WHEN barrier IN ('bollard', 'gate', 'lift_gate', 'swing_gate', 'block', 'log', 'cattle_grid', 'stile', 'motorcycle_barrier', 'cycle_barrier', 'full-height_turnstile', 'turnstile', 'kissing_gate') THEN barrier ELSE NULL END\n    )  AS feature,\n    access\n  FROM planet_osm_polygon p\n  WHERE amenity IN ('parking', 'bicycle_parking', 'motorcycle_parking')\n     OR barrier IN ('bollard', 'gate', 'lift_gate', 'swing_gate', 'block', 'log', 'cattle_grid', 'stile', 'motorcycle_barrier', 'cycle_barrier', 'full-height_turnstile', 'turnstile', 'kissing_gate')\n  ) AS amenity_low_priority_poly"
      },
      "properties": {
        "minzoom": 14
      },
      "layerId": "amenity-low-priority-poly"
    }
  ],
  "scale": 1,
  "metatile": 2,
  "name": "OpenStreetMap Carto",
  "description": "A general-purpose OpenStreetMap mapnik style, in CartoCSS"
}